{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/Interceptors/auth.interceptor.ts","./src/app/about/about.component.ts","./src/app/about/about.html","./src/app/ace5/ace5.component.ts","./src/app/ace5/ace5.html","./src/app/ace5/ace5.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/content/content.component.ts","./src/app/content/content.html","./src/app/custom-material.module.ts","./src/app/customer/customer-dialog.component.ts","./src/app/customer/customer-dialog.html","./src/app/customer/customer-main.component.ts","./src/app/customer/customer-main.html","./src/app/customer/customer-view.component.ts","./src/app/customer/customer-view.html","./src/app/customer/customer.ts","./src/app/customer/goal/goal-dialog.component.ts","./src/app/customer/goal/goal-dialog.html","./src/app/customer/goal/goal.ts","./src/app/customer/stakeholder/stakeholder-dialog.component.ts","./src/app/customer/stakeholder/stakeholder-dialog.html","./src/app/customer/stakeholder/stakeholder.ts","./src/app/customer/team/action/action-dialog.component.ts","./src/app/customer/team/action/action-dialog.html","./src/app/customer/team/action/action.ts","./src/app/customer/team/projectrythm/projectrythm-dialog.component.ts","./src/app/customer/team/projectrythm/projectrythm-dialog.html","./src/app/customer/team/projectrythm/projectrythm.ts","./src/app/customer/team/team-dialog.component.ts","./src/app/customer/team/team-dialog.html","./src/app/customer/team/team-view.component.ts","./src/app/customer/team/team-view.html","./src/app/customer/team/team.ts","./src/app/customer/team/teammember/teammember-dialog.component.ts","./src/app/customer/team/teammember/teammember-dialog.html","./src/app/customer/team/teammember/teammember.ts","./src/app/customer/travel/travel-dialog.component.ts","./src/app/customer/travel/travel-dialog.html","./src/app/customer/travel/travel.ts","./src/app/employee/certification/certification-dialog.component.ts","./src/app/employee/certification/certification-dialog.html","./src/app/employee/certification/certification.ts","./src/app/employee/employee-dialog.component.ts","./src/app/employee/employee-dialog.html","./src/app/employee/employee-main.component.ts","./src/app/employee/employee-main.html","./src/app/employee/employee-view.component.ts","./src/app/employee/employee-view.html","./src/app/employee/employee.ts","./src/app/employee/feedback/feedback-dialog.component.ts","./src/app/employee/feedback/feedback-dialog.html","./src/app/employee/feedback/feedback.ts","./src/app/employee/improvementarea/improvementarea-dialog.component.ts","./src/app/employee/improvementarea/improvementarea-dialog.html","./src/app/employee/improvementarea/improvementarea.ts","./src/app/employee/skill/skill-dialog.component.ts","./src/app/employee/skill/skill-dialog.html","./src/app/employee/skill/skill.ts","./src/app/employee/training/training-dialog.component.ts","./src/app/employee/training/training-dialog.html","./src/app/employee/training/training.ts","./src/app/footer/footer.component.ts","./src/app/footer/footer.html","./src/app/home/home.component.ts","./src/app/home/home.html","./src/app/login/login.component.ts","./src/app/login/login.html","./src/app/menu/breadCrumb.ts","./src/app/menu/breadcrumb.component.ts","./src/app/menu/breadcrumb.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.html","./src/app/register/register.component.ts","./src/app/register/register.html","./src/app/services/auth.service.ts","./src/app/services/data.service.ts","./src/app/services/localStorage.service.ts","./src/app/services/url.service.ts","./src/app/services/utility.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { LocalStorageService } from '../services/localStorage.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  token: string;\r\n\r\n  constructor(private localStorageService: LocalStorageService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    //  this.token = '?access_token=' + this.localStorageService.getValueFromLocalStorage().access_token;\r\n    //  req.url = req.url + this.token;\r\n    const authreq = req.clone();\r\n    return next.handle(authreq);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/Interceptors/auth.interceptor.ts","import { Component } from '@angular/core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n@Component({\n  selector: 'about',\n  templateUrl: './about.html',\n  animations: [\n    trigger('fade', [\n      state('void', style({ opacity: 0 })),\n      transition(':enter, :leave', [\n        animate('200ms ease-in')\n      ])\n    ])\n  ]\n})\nexport class AboutComponent {\n\n  constructor() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/about/about.component.ts","module.exports = \"   <h3 class=\\\"tos-component-heading\\\">Development & Ownership Team</h3>\\n   <div class=\\\" tos-button-right\\\" style=\\\"height: 35px\\\">\\n\\n   </div>\\n   <div class=\\\"container\\\" fxlayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1%\\\" fxLayoutAlign=\\\"flex-start\\\" @fade>\\n      <div fxFlex=\\\"30%\\\">\\n         <mat-card class=\\\"example-card\\\" style=\\\"padding-bottom: 28px;\\\" >\\n            <mat-card-header>\\n              <mat-card-title>\\n                <a href=\\\"https://www.linkedin.com/in/soumyendu-banerjee-2487a415/\\\" target=\\\"_blank\\\">\\n                <h3><span class=\\\"tos-cust-heading\\\" style=\\\"color: #0092e6\\\"> Soumyendu Banerjee</span></h3>\\n              </a>\\n              </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n              Strategy and High level Flow\\n              <br>\\n              soumyendu.b@coMakeIT.com\\n            </mat-card-content>\\n            <mat-card-actions>\\n            </mat-card-actions>\\n         </mat-card>\\n      </div>\\n      <div fxFlex=\\\"30%\\\">\\n         <mat-card class=\\\"example-card\\\"  style=\\\"padding-bottom: 28px;\\\">\\n            <mat-card-header>\\n              <mat-card-title>\\n                <a href=\\\"https://www.linkedin.com/in/abhinav3414/\\\" target=\\\"_blank\\\">\\n                <h3><span class=\\\"tos-cust-heading\\\" style=\\\"color: #0092e6\\\"> Abhinav Gupta</span></h3>\\n              </a>\\n              </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n              Strategy and Development\\n              <br>\\n              abhinav.g@coMakeIT.com\\n            </mat-card-content>\\n            <mat-card-actions>\\n            </mat-card-actions>\\n         </mat-card>\\n      </div>\\n\\n      </div>\\n      <br>\\n      In case of any suggestions, kindly drop a mail to us. <br><br>We would soon be incorporating a more interactive\\n      feedback medium. <br>\\n      Thanks !!\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/about/about.html\n// module id = ./src/app/about/about.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { DataService } from '../services/data.service';\nimport { UtilityService } from '../services/utility.service';\n\nimport { BreadCrumb } from '../menu/breadCrumb';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\nimport { Ace5 } from './ace5';\nimport { Action } from '../customer/team/action/action';\nimport { ActionDialogComponent } from '../customer/team/action/action-dialog.component';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { Customer } from '../customer/customer';\n\n@Component({\n  selector: 'ace5',\n  templateUrl: './ace5.html',\n  animations: [\n    trigger('fade', [\n      state('void', style({ opacity: 0 })),\n      transition(':enter, :leave', [\n        animate('200ms ease-in')\n      ])\n    ])\n  ]\n})\nexport class Ace5Component {\n  ace5: Ace5;\n  customer: Customer;\n\n  customerId: number;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  thirdFormGroup: FormGroup;\n  isOptional: boolean = false;\n\n  customerAction: any;\n  customerActions = [];\n\n  bread: BreadCrumb;\n\n  constructor(private dataService: DataService, private router: Router, private route: ActivatedRoute,\n    private utilityService: UtilityService, private _formBuilder: FormBuilder, private dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ''\n    });\n    this.thirdFormGroup = this._formBuilder.group({\n      thirdCtrl: ''\n    });\n    this.utilityService.currentBreadCrumb.subscribe(bread => this.bread = bread);\n\n    this.route.params.subscribe(params => {\n      this.customerId = +params['customerId']; // (+) converts string 'id' to a number\n      if (!isNaN(this.customerId)) {\n        this.dataService.getEntityData('ace5s', this.customerId)\n          .then((resCustomerData) => {\n            this.ace5 = resCustomerData;\n            this.ace5.actions.forEach(e => this.customerActions.push(e));\n          }, (err) => {\n            console.log('No ace5s entity found for customer');\n          });\n\n        this.dataService.getEntityData('customers', this.customerId)\n          .then((resCustomerData) => {\n            this.customer = resCustomerData;\n          }, (err) => {\n            console.log('No customer entity found');\n          });\n      }\n    });\n  }\n\n  openDialog(entityName): void {\n    this.customerAction = new Action();\n    this.customerAction.ace5Id = this.ace5.id;\n    this.customerAction.customerId = this.customerId;\n    this.openEntityDialog(ActionDialogComponent, entityName, this.customerActions);\n  }\n\n  openEntityDialog(dialogComponent, entityName, entityArray) {\n    let dialogRef = this.dialog.open(dialogComponent, {\n      data: this\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result !== 'dialogDismissed' && result !== undefined) {\n        this.addNewEntity(entityName, result, entityArray);\n      }\n    });\n  }\n\n  addNewEntity(entityName, entity, entityArray) {\n    this.dataService.postEntity(entityName, entity)\n      .then((resCustomerData) => {\n        entityArray.push(resCustomerData);\n      },\n      (err) => console.log(entityName + \" could not be added :\" + err)\n      );\n  }\n\n  openUpdateDialog(entityName: String, id: number): void {\n    this.customerAction = this.customerActions[this.customerActions.findIndex(e => e.id === id)];\n    this.openEntityUpdateDialog(entityName, ActionDialogComponent, id, this.customerActions);\n  }\n\n\n    openEntityUpdateDialog(entityName, dialogComponent, id, entityArray): void {\n      const index = entityArray.findIndex(e => e.id === id);\n      let entity = entityArray[index];\n      var entityCopy = Object.assign({}, entity);\n\n      let dialogRef = this.dialog.open(dialogComponent, {\n        data: this\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n        if (result !== 'dialogDismissed' && result !== undefined) {\n          this.updateEntity(entityName, id, result, entityArray);\n        } else {\n          entityArray[index] = entityCopy;\n        }\n      });\n    }\n\n    updateEntity(entityName, id, entity, entityArray) {\n      this.dataService.updateEntity(entityName, id, entity)\n        .then((resCustomerData) => {\n          let index = entityArray.findIndex(e => e.id === entity.id);\n          entityArray[index] = entity;\n        },\n        (err) => console.log(entityName + \" could not be updated :\" + err)\n        );\n    }\n\n  delelteEntity(entityName, id, entityArray) {\n    this.dataService.delelteEntity(entityName, id)\n      .then((resCustomerData) => {\n        entityArray.splice(entityArray.findIndex(function(i) {\n          return i.id === id;\n        }), 1);\n      },\n      (err) => console.log(entityName + \" could not be deleted :\" + err)\n      );\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ace5/ace5.component.ts","module.exports = \"<h3 class=\\\"tos-entity-name\\\" >Ace5 Process</h3>\\n<!--\\n   <button mat-raised-button (click)=\\\"isOptional = !isOptional\\\">\\n     {{!isOptional ? 'Enable optional steps' : 'Disable optional steps'}}\\n   </button>\\n   -->\\n<mat-horizontal-stepper [linear]=\\\"true\\\" #stepper *ngIf=\\\"ace5 !== null && customer !== undefined\\\" @fade>\\n<mat-step [stepControl]=\\\"firstFormGroup\\\">\\n   <form [formGroup]=\\\"firstFormGroup\\\">\\n      <ng-template matStepLabel>Ace5 Phase</ng-template>\\n      <mat-form-field>\\n         <input matInput placeholder=\\\"Product Owner\\\" formControlName=\\\"firstCtrl\\\" required>\\n      </mat-form-field>\\n      <mat-form-field >\\n         <input matInput placeholder=\\\"customerId\\\" name=\\\"customerId\\\" [value]=\\\"ace5.customerId\\\" [ngModelOptions]=\\\"{standalone: true}\\\"  [(ngModel)]=\\\"ace5.customerId\\\" ngModel>\\n      </mat-form-field>\\n      <mat-form-field >\\n         <input matInput placeholder=\\\"intialDiscussionDate\\\" name=\\\"intialDiscussionDate\\\" [value]=\\\"ace5.intialDiscussionDate\\\" [ngModelOptions]=\\\"{standalone: true}\\\"  [(ngModel)]=\\\"ace5.intialDiscussionDate\\\" ngModel>\\n      </mat-form-field>\\n      <mat-form-field >\\n         <input matInput placeholder=\\\"processTools\\\" name=\\\"processTools\\\" [value]=\\\"customer.processTools\\\" [ngModelOptions]=\\\"{standalone: true}\\\"  [(ngModel)]=\\\"customer.processTools\\\" ngModel>\\n      </mat-form-field>\\n      <mat-form-field >\\n         <input matInput placeholder=\\\"solutionProduct\\\" name=\\\"solutionProduct\\\" [value]=\\\"customer.solutionProduct\\\" [ngModelOptions]=\\\"{standalone: true}\\\"  [(ngModel)]=\\\"customer.solutionProduct\\\" ngModel>\\n      </mat-form-field>\\n      <mat-form-field >\\n         <input matInput placeholder=\\\"databaseUsed\\\" name=\\\"databaseUsed\\\" [value]=\\\"customer.databaseUsed\\\" [ngModelOptions]=\\\"{standalone: true}\\\"  [(ngModel)]=\\\"customer.databaseUsed\\\" ngModel>\\n      </mat-form-field>\\n      <mat-form-field >\\n         <input matInput placeholder=\\\"operatingEnvironment\\\" name=\\\"operatingEnvironment\\\" [value]=\\\"customer.operatingEnvironment\\\" [ngModelOptions]=\\\"{standalone: true}\\\"  [(ngModel)]=\\\"customer.operatingEnvironment\\\" ngModel>\\n      </mat-form-field>\\n      <mat-form-field >\\n         <input matInput placeholder=\\\"remoteMachineDetails\\\" name=\\\"remoteMachineDetails\\\" [value]=\\\"customer.remoteMachineDetails\\\" [ngModelOptions]=\\\"{standalone: true}\\\"  [(ngModel)]=\\\"customer.remoteMachineDetails\\\" ngModel>\\n      </mat-form-field>\\n      <mat-form-field >\\n         <input matInput placeholder=\\\"process\\\" name=\\\"vpnDetails\\\" [value]=\\\"customer.vpnDetails\\\" [ngModelOptions]=\\\"{standalone: true}\\\"  [(ngModel)]=\\\"customer.vpnDetails\\\" ngModel>\\n      </mat-form-field>\\n      <mat-form-field >\\n         <input matInput placeholder=\\\"communicator\\\" name=\\\"communicator\\\" [value]=\\\"customer.communicator\\\" [ngModelOptions]=\\\"{standalone: true}\\\"  [(ngModel)]=\\\"customer.communicator\\\" ngModel>\\n      </mat-form-field>\\n      <mat-form-field >\\n         <input matInput placeholder=\\\"communicator\\\" name=\\\"skillsReuired\\\" [value]=\\\"customer.skillsReuired\\\" [ngModelOptions]=\\\"{standalone: true}\\\"  [(ngModel)]=\\\"customer.skillsReuired\\\" ngModel>\\n      </mat-form-field>\\n<hr>\\n       <br>\\n      <mat-accordion [multi]=\\\"true\\\" @fade>\\n         <mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\" [expanded]=\\\"true\\\" >\\n         <mat-expansion-panel-header>\\n            <mat-panel-title>\\n               <h3>Actions</h3>\\n            </mat-panel-title>\\n            <mat-panel-description>\\n               <!--Currently I am {{panelOpenState ? 'open' : 'closed'}}-->\\n            </mat-panel-description>\\n         </mat-expansion-panel-header>\\n         <div class=\\\" tos-button-right\\\">\\n            <span  (click)=\\\"openDialog('actions')\\\" class=\\\"tos-add-button\\\">+</span>\\n         </div>\\n         <div class=\\\"container\\\" fxlayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1%\\\" fxLayoutAlign=\\\"flex-start\\\">\\n            <div fxFlex=\\\"30%\\\" *ngFor = \\\"let action of customerActions\\\">\\n               <mat-card class=\\\"example-card\\\" >\\n                  <mat-card-header>\\n                     <mat-card-title>\\n                        <h3><span >{{action.details}}</span></h3>\\n                     </mat-card-title>\\n                     <mat-card-subtitle></mat-card-subtitle>\\n                  </mat-card-header>\\n                  <mat-card-content>\\n                     cause: {{action.cause}} <br>\\n                     platform: {{action.platform}}<br>\\n                     status: {{action.status}}\\n                  </mat-card-content>\\n                  <mat-card-actions>\\n                     <span (click)=\\\"openUpdateDialog('actions',action.id)\\\" style=\\\"cursor:pointer;color:grey\\\">\\n                        <mat-icon  >create</mat-icon>\\n                     </span>\\n                     &emsp;\\n                     <span (click)=\\\"delelteEntity('actions',action.id,customerActions)\\\" style=\\\"cursor:pointer; color:grey\\\">\\n                        <mat-icon  >delete</mat-icon>\\n                     </span>\\n                  </mat-card-actions>\\n               </mat-card>\\n            </div>\\n            <div *ngIf=\\\"customerActions.length===0\\\" class=\\\"tos-content-color\\\">No Actions Defined </div>\\n         </div>\\n         </mat-expansion-panel>\\n       </mat-accordion>\\n\\n   <br>   <br>\\n       <div>\\n         <button mat-button matStepperNext>Next</button>\\n      </div>\\n   </form>\\n\\n</mat-step>\\n<mat-step [stepControl]=\\\"secondFormGroup\\\" [optional]=\\\"isOptional\\\">\\n<form [formGroup]=\\\"secondFormGroup\\\">\\n   <ng-template matStepLabel>Acquire Phase</ng-template>\\n   <mat-form-field>\\n      <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\n   </mat-form-field>\\n   <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button matStepperNext>Next</button>\\n   </div>\\n</form>\\n</mat-step>\\n<mat-step [stepControl]=\\\"thirdFormGroup\\\" [optional]=\\\"isOptional\\\">\\n<form [formGroup]=\\\"thirdFormGroup\\\">\\n   <ng-template matStepLabel>Assimilate Phase</ng-template>\\n   <mat-form-field>\\n      <input matInput placeholder=\\\"Assimilate\\\" formControlName=\\\"thirdCtrl\\\" required>\\n   </mat-form-field>\\n   <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button matStepperNext>Next</button>\\n   </div>\\n</form>\\n</mat-step>\\n<mat-step>\\n   <ng-template matStepLabel>Done</ng-template>\\n   You are now done.\\n   <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\n   </div>\\n</mat-step>\\n</mat-horizontal-stepper>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ace5/ace5.html\n// module id = ./src/app/ace5/ace5.html\n// module chunks = main","export class Ace5 {\n  id = '';\n  actions = [];\n  risks = [];\n  customerId = +'';\n  intialDiscussionDate : Date;\n  createdAt = '';\n\n  constructor(values: Object = {}) {\n    Object.assign(this, values);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ace5/ace5.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EmployeeMainComponent } from './employee/employee-main.component';\nimport { AboutComponent } from './about/about.component';\nimport { CustomerMainComponent } from './customer/customer-main.component';\nimport { CustomerViewComponent } from './customer/customer-view.component';\nimport { TeamViewComponent } from './customer/team/team-view.component';\nimport { EmployeeViewComponent } from './employee/employee-view.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ContentComponent } from './content/content.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { Ace5Component } from './ace5/ace5.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'view/login', component: LoginComponent },\n  { path: 'view/register', component: RegisterComponent },\n  { path: 'contentDashboard', component: ContentComponent },\n  { path: 'view/about', component: AboutComponent },\n  { path: 'view/profile', component: ProfileComponent },\n  { path: 'view/customers', component: CustomerMainComponent },\n  { path: 'view/customer/:id', component: CustomerViewComponent },\n  { path: 'view/employees', component: EmployeeMainComponent },\n  { path: 'view/employee/:id', component: EmployeeViewComponent },\n  { path: 'view/team/:id', component: TeamViewComponent },\n  { path: 'view/ace5/:customerId', component: Ace5Component }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"body > app-root > div > h2\\n {\\n  font-family: sans-serif;\\n  background: red !important;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--This is app component template.-->\\n<!--  <login> </login> -->\\n<content> </content>\\n<!--\\n   <button mat-mini-fab> <mat-icon ><i class=\\\"material-icons\\\">home</i></mat-icon> </button>\\n   -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\nngOnInit() {\n}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule, HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\nimport { FlexLayoutModule } from '@angular/flex-layout'\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CustomMaterialModule } from './custom-material.module';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { ContentComponent } from './content/content.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { AboutComponent } from './about/about.component';\nimport { BreadcrumbComponent } from './menu/breadcrumb.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { HomeComponent } from './home/home.component';\n\nimport { EmployeeMainComponent } from './employee/employee-main.component';\nimport { EmployeeViewComponent } from './employee/employee-view.component';\nimport { EmployeeDialogComponent } from './employee/employee-dialog.component';\n\nimport { CustomerMainComponent } from './customer/customer-main.component';\nimport { CustomerViewComponent } from './customer/customer-view.component';\nimport { CustomerDialogComponent } from './customer/customer-dialog.component';\n\nimport { Ace5Component } from './ace5/ace5.component';\n\nimport { GoalDialogComponent } from './customer/goal/goal-dialog.component';\nimport { TeamDialogComponent } from './customer/team/team-dialog.component';\nimport { StakeholderDialogComponent } from './customer/stakeholder/stakeholder-dialog.component';\nimport { TeamViewComponent } from './customer/team/team-view.component';\nimport { ProjectRythmDialogComponent } from './customer/team/projectrythm/projectrythm-dialog.component';\nimport { TeamMemberDialogComponent } from './customer/team/teammember/teammember-dialog.component';\nimport { TravelDialogComponent } from './customer/travel/travel-dialog.component';\nimport { SkillDialogComponent } from './employee/skill/skill-dialog.component';\nimport { CertificationDialogComponent } from './employee/certification/certification-dialog.component';\nimport { ImprovementAreaDialogComponent } from './employee/improvementarea/improvementarea-dialog.component';\nimport { FeedbackDialogComponent } from './employee/feedback/feedback-dialog.component';\nimport { TrainingDialogComponent } from './employee/training/training-dialog.component';\nimport { ActionDialogComponent } from './customer/team/action/action-dialog.component';\n\nimport { DataService } from './services/data.service';\nimport { UtilityService } from './services/utility.service';\nimport { AuthService } from './services/auth.service';\nimport { LocalStorageService } from './services/localStorage.service';\nimport { UrlService } from './services/url.service';\nimport { AuthInterceptor } from './Interceptors/auth.interceptor';\n\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    EmployeeMainComponent,\n    AboutComponent,\n    MenuComponent,\n    CustomerMainComponent,\n    EmployeeViewComponent,\n    CustomerViewComponent,\n    TeamViewComponent,\n    EmployeeDialogComponent,\n    CustomerDialogComponent,\n    StakeholderDialogComponent,\n    GoalDialogComponent,\n    TeamDialogComponent,\n    ProjectRythmDialogComponent,\n    ActionDialogComponent,\n    TeamMemberDialogComponent,\n    TravelDialogComponent,\n    SkillDialogComponent,\n    CertificationDialogComponent,\n    TrainingDialogComponent,\n    ImprovementAreaDialogComponent,\n    FeedbackDialogComponent,\n    ProfileComponent,\n    FooterComponent,\n    ContentComponent,\n    BreadcrumbComponent,\n    HomeComponent,\n    Ace5Component\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    CustomMaterialModule,\n    FlexLayoutModule,\n    FormsModule,\n    HttpModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MDBBootstrapModule.forRoot()\n  ],\n  schemas: [NO_ERRORS_SCHEMA],\n  exports: [],\n  providers: [DataService, UtilityService, AuthService, LocalStorageService, UrlService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n    /*{ provide: LocationStrategy, useClass: HashLocationStrategy },*/\n  ],\n  entryComponents: [\n    EmployeeDialogComponent, CustomerDialogComponent, StakeholderDialogComponent,\n    GoalDialogComponent, TeamDialogComponent, ProjectRythmDialogComponent, ActionDialogComponent,\n    TeamMemberDialogComponent, TravelDialogComponent, SkillDialogComponent, CertificationDialogComponent,\n    TrainingDialogComponent, ImprovementAreaDialogComponent, FeedbackDialogComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n  constructor() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LocalStorageService } from '../services/localStorage.service';\nimport { UtilityService } from '../services/utility.service';\n\n@Component({\n  selector: 'content',\n  templateUrl: './content.html',\n})\nexport class ContentComponent {\n  items: any[];\n  title = 'Team Operations System';\n  tokenSub = undefined;\n\n  constructor(private router: Router, private route: ActivatedRoute, private localStorageService: LocalStorageService,\n    private utilityService: UtilityService) { }\n\n  ngOnInit() {\n    this.utilityService.currenttokenSubject.subscribe(tokenSubject => {\n      this.tokenSub = tokenSubject;\n    })\n    var local = this.localStorageService.getValueFromLocalStorage()\n    if (local !== null)\n      this.tokenSub = local.access_token;\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/content/content.component.ts","module.exports = \"<div class=\\\"tos-menu-style\\\">\\r\\n   <div fxFlex=\\\"15%\\\" fxHide.lt-md=\\\"true\\\"></div>\\r\\n   <div fxFlex=\\\"100%\\\" >\\r\\n      <menu *ngIf=\\\"tokenSub.length > 0 \\\"></menu>\\r\\n   </div>\\r\\n   <div fxFlex=\\\"15%\\\" fxHide.lt-md=\\\"true\\\"></div>\\r\\n</div>\\r\\n<div class=\\\"tos-body-style\\\">\\r\\n   <div fxFlex=\\\"15%\\\" fxHide.lt-md=\\\"true\\\"></div>\\r\\n   <div fxFlex=\\\"100%\\\" >\\r\\n      <div id=\\\"content\\\" class=\\\"tos-router-container\\\">\\r\\n         <router-outlet ></router-outlet>\\r\\n      </div>\\r\\n   </div>\\r\\n   <div fxFlex=\\\"15%\\\" fxHide.lt-md=\\\"true\\\"></div>\\r\\n</div>\\r\\n<div class=\\\"tos-footer-style\\\">\\r\\n   <footer></footer>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/content/content.html\n// module id = ./src/app/content/content.html\n// module chunks = main","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatButtonModule } from '@angular/material';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDialogModule } from '@angular/material';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  imports: [MatButtonModule, MatToolbarModule, MatCardModule, MatInputModule, MatIconModule, MatCheckboxModule,\r\n    MatMenuModule, MatFormFieldModule, MatDialogModule, MatExpansionModule, MatAutocompleteModule, MatSelectModule,\r\n    MatDatepickerModule, MatNativeDateModule, MatTabsModule, MatStepperModule, MatProgressSpinnerModule],\r\n  exports: [MatButtonModule, MatToolbarModule, MatCardModule, MatInputModule, MatIconModule, MatCheckboxModule,\r\n    MatMenuModule, MatFormFieldModule, MatDialogModule, MatExpansionModule, MatAutocompleteModule, MatSelectModule,\r\n    MatDatepickerModule, MatNativeDateModule, MatTabsModule, MatStepperModule, MatProgressSpinnerModule]\r\n})\r\nexport class CustomMaterialModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/custom-material.module.ts","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'customer-dialog',\n  templateUrl: './customer-dialog.html'\n})\nexport class CustomerDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<CustomerDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/customer-dialog.component.ts","module.exports = \"<div *ngIf=\\\"  data.customer!==undefined\\\" >\\r\\n   <h2 *ngIf=\\\"data.customer.id === ''\\\" mat-dialog-title>Add Customer</h2>\\r\\n   <h2   *ngIf=\\\"data.customer.id !== ''\\\" mat-dialog-title>Update Customer</h2>\\r\\n   <mat-dialog-content>\\r\\n      <form id=\\\"formNewEmployee2\\\" name=\\\"formNewEmployeeUpdate\\\"  #customerDataUpdate=\\\"ngForm\\\">\\r\\n         <mat-form-field >\\r\\n            <input matInput placeholder=\\\"Name\\\" name=\\\"name\\\" [value]=\\\"data.customer.name\\\" [(ngModel)]=\\\"data.customer.name\\\" ngModel><br>\\r\\n         </mat-form-field>\\r\\n         <br>\\r\\n         <mat-form-field >\\r\\n            <input matInput placeholder=\\\"Contact No.\\\" name=\\\"contact\\\" [value]=\\\"data.customer.contact\\\" [(ngModel)]=\\\"data.customer.contact\\\" ngModel>\\r\\n         </mat-form-field>\\r\\n         <br>\\r\\n         <mat-form-field >\\r\\n            <input matInput placeholder=\\\"Domain\\\" name=\\\"domain\\\" [value]=\\\"data.customer.domain\\\" [(ngModel)]=\\\"data.customer.domain\\\" ngModel>\\r\\n         </mat-form-field>\\r\\n         <br>\\r\\n         <mat-form-field >\\r\\n            <input type=\\\"text\\\"  name=\\\"country\\\"  placeholder=\\\"Country\\\" aria-label=\\\"country\\\" matInput [formControl]=\\\"data.myControl\\\"\\r\\n            [(ngModel)]=\\\"data.customer.country\\\"\\r\\n            [matAutocomplete]=\\\"auto\\\">\\r\\n            <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n               <mat-option *ngFor=\\\"let country of data.filteredCountries | async\\\" [value]=\\\"country\\\">\\r\\n               {{ country }}\\r\\n               </mat-option>\\r\\n            </mat-autocomplete>\\r\\n         </mat-form-field>\\r\\n         <br>\\r\\n         <mat-form-field >\\r\\n            <textarea matInput placeholder=\\\"Address\\\" rows=\\\"3\\\" name=\\\"address\\\" [value]=\\\"data.customer.address\\\" [(ngModel)]=\\\"data.customer.address\\\" ngModel>\\r\\n            </textarea>\\r\\n         </mat-form-field>\\r\\n      </form>\\r\\n   </mat-dialog-content>\\r\\n   <mat-dialog-actions>\\r\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.customer *ngIf=\\\"data.customer.id !== ''\\\">Update</button>\\r\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.customer *ngIf=\\\"data.customer.id === ''\\\">Add</button>\\r\\n      <button mat-button mat-dialog-close=\\\"dialogDismissed\\\" disableRipple=\\\"true\\\" class=\\\"tos-button\\\">Cancel</button>\\r\\n   </mat-dialog-actions>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/customer-dialog.html\n// module id = ./src/app/customer/customer-dialog.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from '../services/data.service';\nimport { UtilityService } from '../services/utility.service';\n\nimport { CustomerDialogComponent } from './customer-dialog.component';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { Customer } from './customer';\nimport { BreadCrumb } from '../menu/breadCrumb';\n\nimport { trigger, state, style, animate, transition } from '@angular/animations';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport { startWith } from 'rxjs/operators/startWith';\nimport { map } from 'rxjs/operators/map';\n\n@Component({\n  selector: 'customer-main',\n  templateUrl: './customer-main.html',\n  animations: [\n    trigger('fade', [\n      state('void', style({ opacity: 0 })),\n      transition(':enter, :leave', [\n        animate('200ms ease-in')\n      ])\n    ])\n  ]\n})\nexport class CustomerMainComponent {\n  customers = [];\n  customer = new Customer();\n  bread: BreadCrumb;\n  myControl: FormControl = new FormControl();\n\n  countries = [\"Afghanistan\", \"Albania\", \"Algeria\", \"Andorra\", \"Angola\", \"Anguilla\", \"Antigua & Barbuda\",\n    \"Argentina\", \"Armenia\", \"Aruba\", \"Australia\", \"Austria\", \"Azerbaijan\", \"Bahamas\", \"Bahrain\", \"Bangladesh\",\n    \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bermuda\", \"Bhutan\", \"Bolivia\", \"Bosnia & Herzegovina\",\n    \"Botswana\", \"Brazil\", \"British Virgin Islands\", \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cambodia\",\n    \"Cameroon\", \"Cape Verde\", \"Cayman Islands\", \"Chad\", \"Chile\", \"China\", \"Colombia\", \"Congo\", \"Cook Islands\",\n    \"Costa Rica\", \"Cote D Ivoire\", \"Croatia\", \"Cruise Ship\", \"Cuba\", \"Cyprus\", \"Czech Republic\", \"Denmark\",\n    \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\",\n    \"Estonia\", \"Ethiopia\", \"Falkland Islands\", \"Faroe Islands\", \"Fiji\", \"Finland\", \"France\", \"French Polynesia\",\n    \"French West Indies\", \"Gabon\", \"Gambia\", \"Georgia\", \"Germany\", \"Ghana\", \"Gibraltar\", \"Greece\", \"Greenland\",\n    \"Grenada\", \"Guam\", \"Guatemala\", \"Guernsey\", \"Guinea\", \"Guinea Bissau\", \"Guyana\", \"Haiti\", \"Honduras\",\n    \"Hong Kong\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\", \"Iraq\", \"Ireland\", \"Isle of Man\", \"Israel\",\n    \"Italy\", \"Jamaica\", \"Japan\", \"Jersey\", \"Jordan\", \"Kazakhstan\", \"Kenya\", \"Kuwait\", \"Kyrgyz Republic\", \"Laos\",\n    \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libya\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Macau\", \"Macedonia\",\n    \"Madagascar\", \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Mauritania\", \"Mauritius\", \"Mexico\", \"Moldova\", \"Monaco\",\n    \"Mongolia\", \"Montenegro\", \"Montserrat\", \"Morocco\", \"Mozambique\", \"Namibia\", \"Nepal\", \"Netherlands\", \"Netherlands Antilles\",\n    \"New Caledonia\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"Norway\", \"Oman\", \"Pakistan\", \"Palestine\", \"Panama\",\n    \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Poland\", \"Portugal\", \"Puerto Rico\", \"Qatar\", \"Reunion\",\n    \"Romania\", \"Russia\", \"Rwanda\", \"Saint Pierre & Miquelon\", \"Samoa\", \"San Marino\", \"Satellite\", \"Saudi Arabia\",\n    \"Senegal\", \"Serbia\", \"Seychelles\", \"Sierra Leone\", \"Singapore\", \"Slovakia\", \"Slovenia\", \"South Africa\",\n    \"South Korea\", \"Spain\", \"Sri Lanka\", \"St Kitts & Nevis\", \"St Lucia\", \"St Vincent\", \"St. Lucia\", \"Sudan\",\n    \"Suriname\", \"Swaziland\", \"Sweden\", \"Switzerland\", \"Syria\", \"Taiwan\", \"Tajikistan\", \"Tanzania\", \"Thailand\",\n    \"Timor L'Este\", \"Togo\", \"Tonga\", \"Trinidad & Tobago\", \"Tunisia\", \"Turkey\", \"Turkmenistan\", \"Turks & Caicos\",\n    \"Uganda\", \"Ukraine\", \"United Arab Emirates\", \"United Kingdom\", \"Uruguay\", \"Uzbekistan\", \"Venezuela\", \"Vietnam\",\n    \"Virgin Islands (US)\", \"Yemen\", \"Zambia\", \"Zimbabwe\"];\n\n  filteredCountries: Observable<string[]>;\n\n  constructor(private dataService: DataService, private router: Router, private route: ActivatedRoute,\n    private dialog: MatDialog, private utilityService: UtilityService) {\n  }\n\n  ngOnInit() {\n    this.utilityService.currentBreadCrumb.subscribe(bread => this.bread = bread);\n\n/*\n    console.log(\"hi\")\n    this.dataService.getUsers()\n    .then((resCustomerData) => console.log(resCustomerData));\n    */\n\n    this.dataService.getEntityAllData('customers')\n      .then((resCustomerData) => {\n        resCustomerData.forEach(e => this.customers.push(e));\n      },\n      (err) => console.log(\"customers could not be fetched :\" + err)\n      );\n\n    this.filteredCountries = this.myControl.valueChanges\n      .pipe(\n      startWith(''),\n      map(val => this.filter(val))\n      );\n  }\n\n  filter(val: string): string[] {\n    return this.countries.filter(country =>\n      country.toLowerCase().indexOf(val.toLowerCase()) === 0);\n  }\n\n  openDialog(): void {\n    this.customer = new Customer();\n    let dialogRef = this.dialog.open(CustomerDialogComponent, {\n      data: this\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result !== 'dialogDismissed' && result !== undefined) {\n        this.addNewEntity('customers', result, this.customers)\n      }\n    });\n\n  }\n\n  addNewEntity(entityName, entity, entityArray) {\n    this.dataService.postEntity(entityName, entity)\n      .then((resEmployeeData) => {\n        entityArray.push(resEmployeeData);\n      },\n      (err) => console.log(entityName + \" could not be added :\" + err)\n      );\n  }\n\n  openUpdateDialog(id: number): void {\n    const index = this.customers.findIndex(c => c.id === id);\n    this.customer = this.customers[index];\n    var customerCopy = Object.assign({}, this.customer);\n\n    let dialogRef = this.dialog.open(CustomerDialogComponent, {\n      data: this\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result !== 'dialogDismissed' && result !== undefined) {\n        this.updateEntity('customers', id, result, this.customers);\n      } else {\n        this.customers[index] = customerCopy;\n      }\n    });\n  }\n\n  updateEntity(entityName, id, entity, entityArray) {\n    this.dataService.updateEntity(entityName, id, entity)\n      .then((resEmployeeData) => {\n        let index = entityArray.findIndex(e => e.id === entity.id);\n        entityArray[index] = entity;\n      },\n      (err) => console.log(entityName + \" could not be updated :\" + err)\n      );\n  }\n\n\n  deleteCustomer(id) {\n    this.dataService.delelteEntity('customers', id)\n      .then((resCustomerData) => {\n        this.customers.splice(this.customers.findIndex(function(i) {\n          return i.id === id;\n        }), 1);\n      },\n      (err) => console.log(\"Customer could not be deleted :\" + err)\n      );\n  }\n\n  navigateViewCustomer(id) {\n    let entity = this.customers[this.customers.findIndex(c => c.id === id)];\n    this.utilityService.addBreadCrumb(2, '', 'view/customer', id, 'entity', entity.name);\n    this.router.navigate(['view/customer', id], { skipLocationChange: false });\n  }\n\n  checkEntity(entity) {\n    return this.utilityService.checkEntity(entity);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/customer-main.component.ts","module.exports = \"<h3 class=\\\"tos-component-heading\\\">All Customers</h3>\\n<div class=\\\" tos-button-right\\\">\\n   <!--   <button mat-button color=\\\"primary\\\" mat-mini-fab (click)=\\\"openDialog()\\\"> <mat-icon ><i class=\\\"material-icons tos-material-button\\\">+</i></mat-icon> </button>\\n      -->\\n   <span  (click)=\\\"openDialog()\\\" class=\\\"tos-add-button\\\">+</span>\\n</div>\\n<div class=\\\"container\\\" fxlayout=\\\"column\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutAlign=\\\"flex-start\\\" @fade>\\n   <div fxFlex=\\\"100%\\\" *ngFor = \\\"let cust of customers\\\">\\n      <mat-card  class=\\\"example-card\\\">\\n         <mat-card-header>\\n            <mat-card-title>\\n               <h3 class=\\\"shake-hover-style\\\"><span (click)=\\\"navigateViewCustomer(cust.id)\\\" class=\\\"tos-cust-heading\\\">{{cust.name}} </span></h3>\\n            </mat-card-title>\\n         </mat-card-header>\\n         <mat-card-content>\\n            <table style=\\\"width: 100%;\\\">\\n               <th > <span *ngIf=\\\"cust.domain != null\\\">Domain </span></th>\\n               <th > <span *ngIf=\\\"cust.contactPerson != null\\\">Contact Person </span></th>\\n               <th > <span  *ngIf=\\\"cust.addresses !==null\\\">Contact Address </span> </th>\\n               <th >Contact Number</th>\\n               <tr class=\\\"tos-table\\\" style=\\\"text-align: center;\\\">\\n                  <td> <span *ngIf=\\\"cust.domain != null\\\" >{{cust.domain}} </span> </td>\\n                  <td> <span *ngIf=\\\"cust.contactPerson != null\\\" >{{cust.contactPerson}} </span> </td>\\n                  <td ><span *ngIf=\\\"cust.addresses !== null\\\" >{{cust.address}}  {{cust.country}} </span>\\n                  </td>\\n                  <td >{{cust.contact}}</td>\\n               </tr>\\n            </table>\\n         </mat-card-content>\\n         <mat-card-actions>\\n            <!--    <button mat-mini-fab (click)=\\\"openUpdateDialog(cust.id)\\\" > <mat-icon >create</mat-icon> </button>\\n               <button mat-mini-fab (click)=\\\"deleteCustomer(cust.id)\\\"> <mat-icon >delete</mat-icon> </button> -->\\n            <span (click)=\\\"openUpdateDialog(cust.id)\\\" style=\\\"cursor:pointer;color:grey\\\">\\n               <mat-icon>create</mat-icon>\\n            </span>\\n            &emsp;\\n            <span (click)=\\\"deleteCustomer(cust.id)\\\" style=\\\"cursor:pointer; color:grey\\\">\\n               <mat-icon>delete</mat-icon>\\n            </span>\\n         </mat-card-actions>\\n      </mat-card>\\n   </div>\\n   <div *ngIf=\\\"checkEntity(customers)\\\" class=\\\"tos-content-color\\\">No Customers Present </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/customer-main.html\n// module id = ./src/app/customer/customer-main.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { DataService } from '../services/data.service';\nimport { UtilityService } from '../services/utility.service';\n\nimport { Customer } from './customer';\nimport { StakeholderDialogComponent } from './stakeholder/stakeholder-dialog.component';\nimport { GoalDialogComponent } from './goal/goal-dialog.component';\nimport { ActionDialogComponent } from './team/action/action-dialog.component';\nimport { TeamDialogComponent } from './team/team-dialog.component';\nimport { TravelDialogComponent } from './travel/travel-dialog.component';\n\nimport { BreadCrumb } from '../menu/breadCrumb';\nimport { Team } from './team/team';\nimport { Ace5 } from '../ace5/ace5';\nimport { Goal } from './goal/goal';\nimport { Action } from './team/action/action';\nimport { Stakeholder } from './stakeholder/stakeholder';\nimport { Travel } from './travel/travel';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n@Component({\n  selector: 'customer-view',\n  templateUrl: './customer-view.html',\n  animations: [\n    trigger('fade', [\n      state('void', style({ opacity: 0 })),\n      transition(':enter, :leave', [\n        animate('200ms ease-in')\n      ])\n    ])\n  ]\n})\nexport class CustomerViewComponent {\n  panelOpenState: any;\n\n  id: number;\n\n  customer: Customer;\n  customerAddresses = [];\n  customerTeams = [];\n  customerGoals = [];\n  customerActions = [];\n  customerStakeholders = [];\n  customerTravels = [];\n\n  mainStakeHolderId: any = undefined;\n\n  customerStakeholder = new Stakeholder();\n  customerGoal = new Goal();\n  customerAction = new Action();\n  customerTravel = new Travel();\n  customerTeam = new Team();\n  goalTenures = ['Weekly', 'Monthly', 'Quarterly', 'Yearly'];\n\n  bread: BreadCrumb;\n\n  constructor(private dataService: DataService, private router: Router, private route: ActivatedRoute,\n    private dialog: MatDialog, private utilityService: UtilityService) {\n  }\n\n  ngOnInit() {\n    this.utilityService.currentBreadCrumb.subscribe(bread => this.bread = bread);\n\n    this.route.params.subscribe(params => {\n      this.id = +params['id']; // (+) converts string 'id' to a number\n      if (!isNaN(this.id)) {\n\n        this.dataService.getEntityData('customers', this.id)\n          .then((resCustomerData) => {\n            this.customer = resCustomerData;\n            this.customer.goals.forEach(e => this.customerGoals.push(e));\n            this.customer.teams.forEach(e => this.customerTeams.push(e));\n            this.customer.travels.forEach(e => this.customerTravels.push(e));\n            this.customer.actions.forEach(e => {\n              if (e.ace5Id === null) {\n                this.customerActions.push(e);\n              }\n            });\n            this.customer.stakeHolders.forEach(e => {\n              this.customerStakeholders.push(e);\n              if (e.contactPerson === true) { this.mainStakeHolderId = e.id; }\n            });\n          });\n      }\n    });\n\n  }\n\n  //function to have only single StakeHolder as customer contactPerson\n  getDisabled(id) {\n    if (this.mainStakeHolderId === undefined) {\n      return false;\n    }\n    return (this.mainStakeHolderId === id) ? false : true;\n  }\n\n  getGoalDesc(goalId) {\n    var index = this.customerGoals.findIndex(e => e.id === goalId);\n    return this.customerGoals[index].description;\n  }\n\n  openDialog(entityName): void {\n    if (entityName === 'teams') {\n      this.customerTeam = new Team();\n      this.openEntityDialog(TeamDialogComponent, entityName, this.customerTeams);\n    }\n    else if (entityName === 'goals') {\n      this.customerGoal = new Goal();\n      this.openEntityDialog(GoalDialogComponent, entityName, this.customerGoals);\n    }\n    else if (entityName === 'actions') {\n      this.customerAction = new Action();\n      this.customerAction.customerId = this.id;\n      this.openEntityDialog(ActionDialogComponent, entityName, this.customerActions);\n    }\n    else if (entityName === 'stakeholders') {\n      this.customerStakeholder = new Stakeholder();\n      this.openEntityDialog(StakeholderDialogComponent, entityName, this.customerStakeholders);\n    }\n    else if (entityName === 'travels') {\n      this.customerTravel = new Travel();\n      this.openEntityDialog(TravelDialogComponent, entityName, this.customerTravels);\n    }\n    else {\n      console.log(entityName + \" not found\");\n    }\n  }\n\n  openEntityDialog(dialogComponent, entityName, entityArray) {\n    let dialogRef = this.dialog.open(dialogComponent, {\n      data: this\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result !== 'dialogDismissed' && result !== undefined) {\n        this.addNewEntity(entityName, result, entityArray);\n      }\n    });\n  }\n\n  addNewEntity(entityName, entity, entityArray) {\n    if (entityName === 'stakeholders' && entity.contactPerson === true) {\n      this.customer.contactPerson = entity.name;\n    }\n    this.dataService.updateEntity('customers', +this.customer.id, this.customer);\n    entity.customerId = this.id;\n    this.dataService.postEntity(entityName, entity)\n      .then((resCustomerData) => {\n        if (entityName === 'stakeholders' && entity.contactPerson === true) {\n          this.mainStakeHolderId = resCustomerData[\"id\"];\n        }\n        entityArray.push(resCustomerData);\n        entityName = (entityName === 'stakeholders') ? 'stakeHolders' : entityName;\n        this.customer[entityName].push(resCustomerData);\n\n      },\n      (err) => console.log(entityName + \" could not be added :\" + err)\n      );\n  }\n\n  openUpdateDialog(entityName: String, id: number): void {\n    if (entityName === 'teams') {\n      this.customerTeam = this.customerTeams[this.customerTeams.findIndex(e => e.id === id)];\n      this.openEntityUpdateDialog(entityName, TeamDialogComponent, id, this.customerTeams);\n    }\n    else if (entityName === 'goals') {\n      this.customerGoal = this.customerGoals[this.customerGoals.findIndex(e => e.id === id)];\n      this.openEntityUpdateDialog(entityName, GoalDialogComponent, id, this.customerGoals);\n    }\n    else if (entityName === 'actions') {\n      this.customerAction = this.customerActions[this.customerActions.findIndex(e => e.id === id)];\n      this.openEntityUpdateDialog(entityName, ActionDialogComponent, id, this.customerActions);\n    }\n    else if (entityName === 'stakeholders') {\n      this.customerStakeholder = this.customerStakeholders[this.customerStakeholders.findIndex(e => e.id === id)];\n      this.openEntityUpdateDialog(entityName, StakeholderDialogComponent, id, this.customerStakeholders);\n    }\n    else if (entityName === 'travels') {\n      this.customerTravel = this.customerTravels[this.customerTravels.findIndex(e => e.id === id)];\n      this.openEntityUpdateDialog(entityName, TravelDialogComponent, id, this.customerTravels);\n    }\n    else {\n      console.log(entityName + \" not found\");\n    }\n  }\n\n  openEntityUpdateDialog(entityName, dialogComponent, id, entityArray): void {\n    const index = entityArray.findIndex(e => e.id === id);\n    let entity = entityArray[index];\n    var entityCopy = Object.assign({}, entity);\n\n    let dialogRef = this.dialog.open(dialogComponent, {\n      data: this\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result !== 'dialogDismissed' && result !== undefined) {\n        this.updateEntity(entityName, id, result, entityArray);\n      } else {\n        entityArray[index] = entityCopy;\n      }\n    });\n  }\n\n  updateEntity(entityName, id, entity, entityArray) {\n    // Logic to update Stakeholder as Contact Person in Customer\n    if (entityName === 'stakeholders' && (this.mainStakeHolderId === entity.id || this.mainStakeHolderId === undefined)) {\n      this.mainStakeHolderId = (entity.contactPerson === false) ? undefined : entity.id;\n    }\n    this.customer.contactPerson = (this.mainStakeHolderId !== undefined) ? entity.name : '';\n    this.dataService.updateEntity('customers', +this.customer.id, this.customer);\n\n    this.dataService.updateEntity(entityName, id, entity)\n      .then((resCustomerData) => {\n\n        let index = entityArray.findIndex(e => e.id === entity.id);\n        entityArray[index] = entity;\n\n        entityName = (entityName === 'stakeholders') ? 'stakeHolders' : entityName;\n        let indexOfCustomer = this.customer[entityName].findIndex(e => e.id === entity.id);\n        this.customer[entityName][indexOfCustomer] = entity;\n\n      },\n      (err) => console.log(entityName + \" could not be updated :\" + err)\n      );\n  }\n\n  navigateViewTeam(teamId) {\n    let entity = this.customerTeams[this.customerTeams.findIndex(t => t.id === teamId)];\n    this.utilityService.addBreadCrumb(3, 'Team', 'view/team', teamId, 'entity', entity.name);\n    this.router.navigate(['view/team', teamId], { skipLocationChange: false });\n  }\n\n  navigateAce5(customerId) {\n    this.dataService.getEntityData('ace5s', customerId)\n      .then((resCustomerData) => {\n        if (resCustomerData === null) {\n          var ace5 = new Ace5();\n          ace5.customerId = customerId;\n          ace5.intialDiscussionDate = new Date();\n          console.log(\"Creating new Ace5 process for customer\");\n          this.dataService.postEntity('ace5s', ace5)\n            .then((resCustomerData) => {\n              console.log(resCustomerData);\n              this.navigateAce5Router(customerId);\n            },\n            (err) => console.log(\"ace5 could not be created :\" + err)\n            );\n        }\n        else {\n          this.navigateAce5Router(customerId);\n        }\n      },\n      (err) => console.log(\"ace5 could not be fetched :\" + err)\n      );\n  }\n\n  navigateAce5Router(customerId) {\n    this.utilityService.addBreadCrumb(3, 'Ace5', 'view/ace5', customerId, 'entity', 'Process');\n    this.router.navigate(['view/ace5', customerId]);\n  }\n\n  delelteEntity(entityName, id, entityArray) {\n    if (entityName === 'stakeholders' && this.mainStakeHolderId === id) {\n      this.mainStakeHolderId = undefined;\n      this.customer.contactPerson = '';\n      this.dataService.updateEntity('customers', +this.customer.id, this.customer);\n    }\n    let goalAlert = false;\n    if (entityName === 'goals') {\n      let index = this.customerActions.findIndex(e => e.goalId === id);\n      if (index !== -1) {\n        goalAlert = true;\n      }\n    }\n    if (goalAlert === false) {\n      this.dataService.delelteEntity(entityName, id)\n        .then((resCustomerData) => {\n          entityArray.splice(entityArray.findIndex(function(i) {\n            return i.id === id;\n          }), 1);\n          entityName = (entityName === 'stakeholders') ? 'stakeHolders' : entityName;\n          this.customer[entityName].splice(this.customer[entityName].findIndex(function(i) {\n            return i.id === id;\n          }), 1);\n        },\n        (err) => console.log(entityName + \" could not be deleted :\" + err)\n        );\n    }\n    else {\n      alert(\"Goal is assigned to an action\");\n    }\n\n\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/customer-view.component.ts","module.exports = \"<div *ngIf=\\\"customer != undefined\\\">\\n   <h2 class=\\\"tos-entity-name\\\">{{customer.name}}</h2>\\n   <span class=\\\"tos-entity-top-content\\\">\\n      <i class=\\\"fa fa-phone tos-icons\\\" title=\\\"Contact Number\\\" aria-hidden=\\\"true\\\"></i>\\n      <a class=\\\"tos-text\\\"> {{customer.contact}} </a>\\n      <i class=\\\"fa fa-user-secret tos-icons\\\" title=\\\"Contact person\\\" aria-hidden=\\\"true\\\"></i>\\n      <a class=\\\"tos-text\\\" *ngIf=\\\"mainStakeHolderId\\\"> {{customer.contactPerson}} </a>\\n      <a class=\\\"tos-text\\\" *ngIf=\\\"mainStakeHolderId === undefined\\\"> No Contact Person Assigned </a>\\n      <i class=\\\"fa fa-globe tos-icons\\\" aria-hidden=\\\"true\\\" title=\\\"Domain\\\" ></i>\\n      <a class=\\\"tos-text\\\"> {{customer.domain}} </a>\\n      <i class=\\\"fa fa-snowflake-o tos-icons\\\"  title=\\\"Ace5 Process\\\" aria-hidden=\\\"true\\\"></i>\\n      <a class=\\\"tos-text\\\" (click)=\\\"navigateAce5(customer.id)\\\" style=\\\"cursor:pointer\\\"> Ace5 Process </a>\\n   </span>\\n</div>\\n<mat-accordion [multi]=\\\"true\\\" @fade>\\n   <mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\" [expanded]=\\\"true\\\" >\\n   <mat-expansion-panel-header>\\n      <mat-panel-title>\\n         <h3>Customer Goals</h3>\\n      </mat-panel-title>\\n      <mat-panel-description>\\n         <!--Currently I am {{panelOpenState ? 'open' : 'closed'}}-->\\n      </mat-panel-description>\\n   </mat-expansion-panel-header>\\n   <div class=\\\" tos-button-right\\\">\\n      <span  (click)=\\\"openDialog('goals')\\\" class=\\\"tos-add-button\\\">+</span>\\n   </div>\\n   <div class=\\\"container\\\" fxlayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1%\\\" fxLayoutAlign=\\\"flex-start\\\">\\n      <div fxFlex=\\\"30%\\\" *ngFor = \\\"let goal of customerGoals\\\">\\n         <mat-card class=\\\"example-card\\\" >\\n            <mat-card-header>\\n               <mat-card-title>\\n                  <h3><span >{{goal.description}}</span></h3>\\n               </mat-card-title>\\n               <mat-card-subtitle></mat-card-subtitle>\\n            </mat-card-header>\\n            <mat-card-content>\\n               Tenure: {{goal.tenure}} <br>\\n               Status: {{goal.status}}<br>\\n               Details: {{goal.details}}<br>\\n               Signed By: {{goal.signedBy}}\\n            </mat-card-content>\\n            <mat-card-actions>\\n               <span (click)=\\\"openUpdateDialog('goals',goal.id)\\\" style=\\\"cursor:pointer;color:grey\\\">\\n                  <mat-icon  >create</mat-icon>\\n               </span>\\n               &emsp;\\n               <span (click)=\\\"delelteEntity('goals',goal.id,customerGoals)\\\" style=\\\"cursor:pointer; color:grey\\\">\\n                  <mat-icon  >delete</mat-icon>\\n               </span>\\n            </mat-card-actions>\\n         </mat-card>\\n      </div>\\n      <div *ngIf=\\\"customerGoals.length===0\\\" class=\\\"tos-content-color\\\">No Goals Defined </div>\\n   </div>\\n   </mat-expansion-panel>\\n   <mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\" [expanded]=\\\"true\\\" >\\n   <mat-expansion-panel-header>\\n      <mat-panel-title>\\n         <h3>Customer Actions</h3>\\n      </mat-panel-title>\\n      <mat-panel-description>\\n         <!--Currently I am {{panelOpenState ? 'open' : 'closed'}}-->\\n      </mat-panel-description>\\n   </mat-expansion-panel-header>\\n   <div class=\\\" tos-button-right\\\">\\n      <span  (click)=\\\"openDialog('actions')\\\" class=\\\"tos-add-button\\\">+</span>\\n   </div>\\n   <div class=\\\"container\\\" fxlayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1%\\\" fxLayoutAlign=\\\"flex-start\\\">\\n      <div fxFlex=\\\"30%\\\" *ngFor = \\\"let action of customerActions\\\" >\\n         <mat-card class=\\\"example-card\\\" *ngIf=\\\"action.ace5Id === null\\\">\\n            <mat-card-header>\\n               <mat-card-title>\\n                  <h3><span >{{action.details}}</span></h3>\\n               </mat-card-title>\\n               <mat-card-subtitle *ngIf=\\\"action.goalId !== null\\\">Goal: {{ getGoalDesc(action.goalId)}}</mat-card-subtitle>\\n            </mat-card-header>\\n            <mat-card-content>\\n              Cause: {{action.cause}}<br>\\n              PLatform: {{action.platform}}<br> Status: {{action.status}}\\n            </mat-card-content>\\n            <mat-card-actions>\\n               <span (click)=\\\"openUpdateDialog('actions',action.id)\\\" style=\\\"cursor:pointer;color:grey\\\">\\n                  <mat-icon  >create</mat-icon>\\n               </span>\\n               &emsp;\\n               <span (click)=\\\"delelteEntity('actions',action.id,customerActions)\\\" style=\\\"cursor:pointer; color:grey\\\">\\n                  <mat-icon  >delete</mat-icon>\\n               </span>\\n            </mat-card-actions>\\n         </mat-card>\\n      </div>\\n      <div *ngIf=\\\"customerActions.length===0\\\" class=\\\"tos-content-color\\\">No Actions Defined </div>\\n   </div>\\n   </mat-expansion-panel>\\n   <mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\" [expanded]=\\\"true\\\">\\n   <mat-expansion-panel-header>\\n      <mat-panel-title>\\n         <h3>Customer Teams</h3>\\n      </mat-panel-title>\\n      <mat-panel-description>\\n         <!--Currently I am {{panelOpenState ? 'open' : 'closed'}}-->\\n      </mat-panel-description>\\n   </mat-expansion-panel-header>\\n   <div class=\\\" tos-button-right\\\">\\n      <span  (click)=\\\"openDialog('teams')\\\" class=\\\"tos-add-button\\\">+</span>\\n   </div>\\n   <div class=\\\"container\\\" fxlayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1%\\\" fxLayoutAlign=\\\"flex-start\\\">\\n      <div fxFlex=\\\"30%\\\" *ngFor = \\\"let team of customerTeams\\\">\\n         <mat-card class=\\\"example-card\\\" >\\n            <mat-card-header>\\n               <mat-card-title>\\n                  <h3 class=\\\"shake-hover-style\\\"><span class=\\\"tos-cust-heading\\\" (click)=\\\"navigateViewTeam(team.id)\\\">{{team.name}}</span></h3>\\n               </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n               Specialization:  {{team.specialization}}\\n            </mat-card-content>\\n            <mat-card-actions>\\n               <span (click)=\\\"openUpdateDialog('teams',team.id)\\\" style=\\\"cursor:pointer;color:grey\\\">\\n                  <mat-icon  >create</mat-icon>\\n               </span>\\n               &emsp;\\n               <span (click)=\\\"delelteEntity('teams',team.id,customerTeams)\\\" style=\\\"cursor:pointer; color:grey\\\">\\n                  <mat-icon  >delete</mat-icon>\\n               </span>\\n            </mat-card-actions>\\n         </mat-card>\\n      </div>\\n      <div *ngIf=\\\"customerTeams.length===0\\\" class=\\\"tos-content-color\\\">No Teams Assigned </div>\\n   </div>\\n   </mat-expansion-panel>\\n   <mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\" [expanded]=\\\"true\\\">\\n   <mat-expansion-panel-header>\\n      <mat-panel-title>\\n         <h3>StakeHolders</h3>\\n      </mat-panel-title>\\n      <mat-panel-description>\\n         <!--Currently I am {{panelOpenState ? 'open' : 'closed'}}-->\\n      </mat-panel-description>\\n   </mat-expansion-panel-header>\\n   <div class=\\\" tos-button-right\\\">\\n      <span  (click)=\\\"openDialog('stakeholders')\\\" class=\\\"tos-add-button\\\">+</span>\\n   </div>\\n   <div class=\\\"container\\\" fxlayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1%\\\" fxLayoutAlign=\\\"flex-start\\\">\\n      <div fxFlex=\\\"30%\\\" *ngFor = \\\"let sholder of customerStakeholders\\\">\\n         <mat-card class=\\\"example-card\\\" >\\n            <mat-card-header>\\n               <mat-card-title class=\\\"tos-stakeholder-title\\\">\\n                  <h3><span>{{sholder.name}}</span>\\n                    <span class=\\\"tos-subtitle\\\" *ngIf=\\\"sholder.contactPerson === true\\\"> (Contact Person) </span></h3>\\n               </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n               Role: {{sholder.role}} <br>\\n               EMail: {{sholder.email}}<br>\\n               Contact: {{sholder.phoneNo}}<br>\\n            </mat-card-content>\\n            <mat-card-actions>\\n               <span (click)=\\\"openUpdateDialog('stakeholders',sholder.id)\\\" style=\\\"cursor:pointer;color:grey\\\">\\n                  <mat-icon  >create</mat-icon>\\n               </span>\\n               &emsp;\\n               <span (click)=\\\"delelteEntity('stakeholders',sholder.id,customerStakeholders)\\\" style=\\\"cursor:pointer; color:grey\\\">\\n                  <mat-icon  >delete</mat-icon>\\n               </span>\\n            </mat-card-actions>\\n         </mat-card>\\n      </div>\\n      <div *ngIf=\\\"customerStakeholders.length===0\\\" class=\\\"tos-content-color\\\">No StakeHolders Present</div>\\n   </div>\\n   </mat-expansion-panel>\\n   <mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\" [expanded]=\\\"true\\\">\\n   <mat-expansion-panel-header>\\n      <mat-panel-title>\\n         <h3>Travels</h3>\\n      </mat-panel-title>\\n      <mat-panel-description>\\n         <!--Currently I am {{panelOpenState ? 'open' : 'closed'}}-->\\n      </mat-panel-description>\\n   </mat-expansion-panel-header>\\n   <div class=\\\" tos-button-right\\\">\\n      <span  (click)=\\\"openDialog('travels')\\\" class=\\\"tos-add-button\\\">+</span>\\n   </div>\\n   <div class=\\\"container\\\" fxlayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1%\\\" fxLayoutAlign=\\\"flex-start\\\">\\n      <div fxFlex=\\\"30%\\\" *ngFor = \\\"let travel of customerTravels\\\">\\n         <mat-card class=\\\"example-card\\\" >\\n            <mat-card-header>\\n               <mat-card-title>\\n                  <h3><span  >Travelling: {{travel.name}}</span></h3>\\n               </mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n               Travelling from: {{travel.travellingFrom}} To {{travel.travellingTo}}<br>\\n               Date: {{travel.travellingFromDate | date : 'd-M-yy'}} To {{travel.travellingToDate | date : 'd-M-yy'}}<br>\\n               Purpose: {{travel.purpose}}\\n            </mat-card-content>\\n            <mat-card-actions>\\n               <span (click)=\\\"openUpdateDialog('travels',travel.id)\\\" style=\\\"cursor:pointer;color:grey\\\">\\n                  <mat-icon  >create</mat-icon>\\n               </span>\\n               &emsp;\\n               <span (click)=\\\"delelteEntity('travels',travel.id,customerTravels)\\\" style=\\\"cursor:pointer; color:grey\\\">\\n                  <mat-icon  >delete</mat-icon>\\n               </span>\\n            </mat-card-actions>\\n         </mat-card>\\n      </div>\\n      <div *ngIf=\\\"customerTravels.length===0\\\" class=\\\"tos-content-color\\\">No Travels Scheduled</div>\\n   </div>\\n   </mat-expansion-panel>\\n</mat-accordion>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/customer-view.html\n// module id = ./src/app/customer/customer-view.html\n// module chunks = main","export class Customer {\r\n  id = '';\r\n  name = '';\r\n  contact = '';\r\n  contactPerson = '';\r\n  domain = '';\r\n  address = '';\r\n  country = '';\r\n\r\n  expectationFromOpd = '';\r\n  process = '';\r\n  processTools = '';\r\n  solutionProduct ='';\r\n  databaseUsed ='';\r\n  operatingEnvironment ='';\r\n  remoteMachineDetails ='';\r\n  vpnDetails ='';\r\n  communicator ='';\r\n  skillsReuired ='';\r\n\r\n  goals = [];\r\n  actions = [];\r\n  teams = [];\r\n  stakeHolders = [];\r\n  travels = [];\r\n  createdAt = '';\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/customer.ts","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'goal-dialog',\n  templateUrl: './goal-dialog.html'\n})\nexport class GoalDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<GoalDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/goal/goal-dialog.component.ts","module.exports = \"<div *ngIf=\\\"data.customerGoal !== undefined\\\" >\\n   <h2 *ngIf=\\\"data.customerGoal.id === ''\\\" mat-dialog-title>Create Goal</h2>\\n   <h2   *ngIf=\\\"data.customerGoal.id !== ''\\\" mat-dialog-title>Update Goal</h2>\\n   <mat-dialog-content>\\n      <form id=\\\"formNewGoalUpdate\\\" name=\\\"formNewGoalUpdate\\\"  #goalDataUpdate=\\\"ngForm\\\">\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Description\\\" name=\\\"description\\\" [value]=\\\"data.customerGoal.description\\\" [(ngModel)]=\\\"data.customerGoal.description\\\" ><br>\\n         </mat-form-field>\\n         <br>\\n         <mat-form-field>\\n           <mat-select [(value)]=\\\"selected\\\" [(ngModel)]=\\\"data.customerGoal.tenure\\\" placeholder=\\\"Tenure\\\" name=\\\"tenure\\\">\\n             <mat-option *ngFor=\\\"let option of data.goalTenures\\\" [value]=\\\"option\\\">\\n               {{ option }}\\n             </mat-option>\\n           </mat-select>\\n         </mat-form-field>\\n         <br>\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Status\\\" name=\\\"status\\\" [value]=\\\"data.customerGoal.status\\\" [(ngModel)]=\\\"data.customerGoal.status\\\" >\\n         </mat-form-field>\\n         <br>\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Signed By\\\" name=\\\"signedBy\\\" [value]=\\\"data.customerGoal.signedBy\\\" [(ngModel)]=\\\"data.customerGoal.signedBy\\\" >\\n         </mat-form-field>\\n         <br>\\n         <mat-form-field >\\n            <textarea matInput placeholder=\\\"Details\\\" name=\\\"details\\\" [value]=\\\"data.customerGoal.details\\\" [(ngModel)]=\\\"data.customerGoal.details\\\" ngModel></textarea>\\n         </mat-form-field>\\n      </form>\\n   </mat-dialog-content>\\n   <mat-dialog-actions>\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.customerGoal *ngIf=\\\"data.customerGoal.id !== ''\\\">Update</button>\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.customerGoal *ngIf=\\\"data.customerGoal.id === ''\\\">Add</button>\\n      <button mat-button mat-dialog-close=\\\"dialogDismissed\\\" disableRipple=\\\"true\\\" class=\\\"tos-button\\\">Cancel</button>\\n   </mat-dialog-actions>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/goal/goal-dialog.html\n// module id = ./src/app/customer/goal/goal-dialog.html\n// module chunks = main","export class Goal {\n  id = '';\n  description = '';\n  customerId = '';\n  tenure = '';\n  status = '';\n  notes = '';\n  signedBy = '';\n  createdAt = '';\n\n  constructor(values: Object = {}) {\n    Object.assign(this, values);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/goal/goal.ts","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'stakeholder-dialog',\n  templateUrl: './stakeholder-dialog.html'\n})\nexport class StakeholderDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<StakeholderDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/stakeholder/stakeholder-dialog.component.ts","module.exports = \"<div *ngIf=\\\"  data.customerStakeholder!==undefined\\\" >\\r\\n   <h2 *ngIf=\\\"data.customerStakeholder.id === ''\\\" mat-dialog-title>Create StakeHolder</h2>\\r\\n   <h2   *ngIf=\\\"data.customerStakeholder.id !== ''\\\" mat-dialog-title>Update StakeHolder</h2>\\r\\n   <mat-dialog-content>\\r\\n      <form id=\\\"formNewStakeholderUpdate\\\" name=\\\"formNewStakeholderUpdate\\\"  #stakeholderDataUpdate=\\\"ngForm\\\" >\\r\\n          <mat-checkbox [value]=\\\"data.customerStakeholder.contactPerson\\\" name=\\\"contactPerson\\\"\\r\\n           [(ngModel)]=\\\"data.customerStakeholder.contactPerson\\\" disableRipple=\\\"true\\\" [disabled]=\\\"data.getDisabled(data.customerStakeholder.id)\\\">Contact Person</mat-checkbox>\\r\\n        <br><br>\\r\\n         <mat-form-field >\\r\\n            <input matInput placeholder=\\\"Name\\\" name=\\\"name\\\" [value]=\\\"data.name\\\" [(ngModel)]=\\\"data.customerStakeholder.name\\\" ngModel>\\r\\n         </mat-form-field><br>\\r\\n         <mat-form-field >\\r\\n            <input matInput placeholder=\\\"Role\\\" name=\\\"role\\\" [value]=\\\"data.customerStakeholder.role\\\" [(ngModel)]=\\\"data.customerStakeholder.role\\\" ngModel>\\r\\n         </mat-form-field><br>\\r\\n         <mat-form-field >\\r\\n            <input matInput placeholder=\\\"Email\\\" name=\\\"email\\\" [value]=\\\"data.customerStakeholder.email\\\" [(ngModel)]=\\\"data.customerStakeholder.email\\\" ngModel>\\r\\n         </mat-form-field><br>\\r\\n         <mat-form-field >\\r\\n            <input matInput placeholder=\\\"Phone No\\\" name=\\\"phoneNo\\\" [value]=\\\"data.customerStakeholder.phoneNo\\\" [(ngModel)]=\\\"data.customerStakeholder.phoneNo\\\" ngModel>\\r\\n         </mat-form-field>\\r\\n      </form>\\r\\n   </mat-dialog-content>\\r\\n   <mat-dialog-actions>\\r\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.customerStakeholder *ngIf=\\\"data.customerStakeholder.id !== ''\\\">Update</button>\\r\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.customerStakeholder *ngIf=\\\"data.customerStakeholder.id === ''\\\">Add</button>\\r\\n      <button mat-button mat-dialog-close=\\\"dialogDismissed\\\" disableRipple=\\\"true\\\" class=\\\"tos-button\\\">Cancel</button>\\r\\n   </mat-dialog-actions>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/stakeholder/stakeholder-dialog.html\n// module id = ./src/app/customer/stakeholder/stakeholder-dialog.html\n// module chunks = main","export class Stakeholder {\r\n  id = '';\r\n  name = '';\r\n  customerId = '';\r\n  role = '';\r\n  email = '';\r\n  phoneNo = '';\r\n  contactPerson = false;\r\n  createdAt = '';\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/stakeholder/stakeholder.ts","import { Component, Inject, OnInit} from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'action-dialog',\n  templateUrl: './action-dialog.html'\n})\nexport class ActionDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<ActionDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/team/action/action-dialog.component.ts","module.exports = \"<div *ngIf=\\\"data.customerAction!==undefined\\\" >\\n   <h2 *ngIf=\\\"data.customerAction.id === ''\\\" mat-dialog-title>Create Action</h2>\\n   <h2   *ngIf=\\\"data.customerAction.id !== ''\\\" mat-dialog-title>Update Action</h2>\\n   <mat-dialog-content>\\n      <form id=\\\"formNewActionUpdate\\\" name=\\\"formNewActionUpdate\\\"  #actionUpdate=\\\"ngForm\\\">\\n        <mat-form-field *ngIf=\\\"data.customerAction.customerId != null && data.customerAction.ace5Id === null\\\">\\n          <mat-select [(value)]=\\\"selected\\\" [(ngModel)]=\\\"data.customerAction.goalId\\\" placeholder=\\\"Goal\\\" name=\\\"goalId\\\" >\\n            <mat-option *ngFor=\\\"let goal of data.customerGoals\\\" [value]=\\\"goal.id\\\">\\n              {{ goal.description }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <a *ngIf=\\\"data.customerAction.customerId != null\\\"> <br> </a>\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Details\\\" name=\\\"details\\\" [value]=\\\"data.customerAction.details\\\" [(ngModel)]=\\\"data.customerAction.details\\\" ngModel><br>\\n         </mat-form-field><br>\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Cause\\\" name=\\\"cause\\\" [value]=\\\"data.customerAction.cause\\\" [(ngModel)]=\\\"data.customerAction.cause\\\" ngModel>\\n         </mat-form-field><br>\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Platform\\\" name=\\\"platform\\\" [value]=\\\"data.customerAction.platform\\\" [(ngModel)]=\\\"data.customerAction.platform\\\" ngModel><br>\\n         </mat-form-field><br>\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Status\\\" name=\\\"status\\\" [value]=\\\"data.customerAction.status\\\" [(ngModel)]=\\\"data.customerAction.status\\\" ngModel>\\n         </mat-form-field>\\n      </form>\\n   </mat-dialog-content>\\n   <mat-dialog-actions>\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.customerAction *ngIf=\\\"data.customerAction.id !== ''\\\">Update</button>\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.customerAction *ngIf=\\\"data.customerAction.id === ''\\\">Add</button>\\n      <button mat-button mat-dialog-close=\\\"dialogDismissed\\\" disableRipple=\\\"true\\\" class=\\\"tos-button\\\">Cancel</button>\\n   </mat-dialog-actions>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/team/action/action-dialog.html\n// module id = ./src/app/customer/team/action/action-dialog.html\n// module chunks = main","export class Action {\r\n  id = '';\r\n  details = '';\r\n  goalId = '';\r\n  teamId = null;\r\n  customerId = null;\r\n  ace5Id = null;\r\n  cause = '';\r\n  platform = '';\r\n  status = '';\r\n  createdAt = '';\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/team/action/action.ts","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'projectrythm-dialog',\n  templateUrl: './projectrythm-dialog.html'\n})\nexport class ProjectRythmDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<ProjectRythmDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/team/projectrythm/projectrythm-dialog.component.ts","module.exports = \"<div *ngIf=\\\"  data.customerProjectRythm!==undefined\\\" >\\n   <h2 *ngIf=\\\"data.customerProjectRythm.id === ''\\\" mat-dialog-title>Create Project Rythm</h2>\\n   <h2   *ngIf=\\\"data.customerProjectRythm.id !== ''\\\" mat-dialog-title>Update Project Rythm</h2>\\n   <mat-dialog-content>\\n      <form id=\\\"formNewProjectRythmUpdate\\\" name=\\\"formNewProjectRythmUpdate\\\"  #projectRythmUpdate=\\\"ngForm\\\">\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Event\\\" name=\\\"event\\\" [value]=\\\"data.customerProjectRythm.event\\\" [(ngModel)]=\\\"data.customerProjectRythm.event\\\" ngModel><br>\\n         </mat-form-field>\\n         <br>\\n         <mat-form-field>\\n           <mat-select [(value)]=\\\"selected\\\" [(ngModel)]=\\\"data.customerProjectRythm.frequency\\\" placeholder=\\\"Frequency\\\" name=\\\"frequency\\\">\\n             <mat-option *ngFor=\\\"let option of data.rythmFrequency\\\" [value]=\\\"option\\\">\\n               {{ option }}\\n             </mat-option>\\n           </mat-select>\\n         </mat-form-field>\\n         <br>\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Who\\\" name=\\\"whoRythm\\\" [value]=\\\"data.customerProjectRythm.whoRythm\\\" [(ngModel)]=\\\"data.customerProjectRythm.whoRythm\\\" ngModel><br>\\n         </mat-form-field>\\n         <br>\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Where\\\" name=\\\"whereRythm\\\" [value]=\\\"data.customerProjectRythm.whereRythm\\\" [(ngModel)]=\\\"data.customerProjectRythm.whereRythm\\\" ngModel>\\n         </mat-form-field>\\n      </form>\\n   </mat-dialog-content>\\n   <mat-dialog-actions>\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.customerProjectRythm *ngIf=\\\"data.customerProjectRythm.id !== ''\\\">Update</button>\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.customerProjectRythm *ngIf=\\\"data.customerProjectRythm.id === ''\\\">Add</button>\\n      <button mat-button mat-dialog-close=\\\"dialogDismissed\\\" disableRipple=\\\"true\\\" class=\\\"tos-button\\\">Cancel</button>\\n   </mat-dialog-actions>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/team/projectrythm/projectrythm-dialog.html\n// module id = ./src/app/customer/team/projectrythm/projectrythm-dialog.html\n// module chunks = main","export class ProjectRythm {\r\n  id = '';\r\n  event = '';\r\n  teamId = '';\r\n  frequency = '';\r\n  whoRythm = '';\r\n  whereRythm = '';\r\n  createdAt = '';\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/team/projectrythm/projectrythm.ts","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'team-dialog',\n  templateUrl: './team-dialog.html'\n})\nexport class TeamDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<TeamDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/team/team-dialog.component.ts","module.exports = \"<div *ngIf=\\\"  data.customerTeam!==undefined\\\" >\\n   <h2 *ngIf=\\\"data.customerTeam.id === ''\\\" mat-dialog-title>Create Team</h2>\\n   <h2   *ngIf=\\\"data.customerTeam.id !== ''\\\" mat-dialog-title>Update Team</h2>\\n   <mat-dialog-content>\\n      <form id=\\\"formNewteamrUpdate\\\" name=\\\"formNewteamrUpdate\\\"  #teamDataUpdate=\\\"ngForm\\\">\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Name\\\" name=\\\"name\\\" [value]=\\\"data.customerTeam.name\\\" [(ngModel)]=\\\"data.customerTeam.name\\\" ngModel><br>\\n         </mat-form-field><br>\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Specialization\\\" name=\\\"specialization\\\" [value]=\\\"data.customerTeam.specialization\\\" [(ngModel)]=\\\"data.customerTeam.specialization\\\" ngModel>\\n         </mat-form-field>\\n      </form>\\n   </mat-dialog-content>\\n   <mat-dialog-actions>\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.customerTeam *ngIf=\\\"data.customerTeam.id !== ''\\\">Update</button>\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.customerTeam *ngIf=\\\"data.customerTeam.id === ''\\\">Add</button>\\n      <button mat-button mat-dialog-close=\\\"dialogDismissed\\\" disableRipple=\\\"true\\\" class=\\\"tos-button\\\">Cancel</button>\\n   </mat-dialog-actions>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/team/team-dialog.html\n// module id = ./src/app/customer/team/team-dialog.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from '../../services/data.service';\n\nimport { ProjectRythmDialogComponent } from './projectrythm/projectrythm-dialog.component';\nimport { ActionDialogComponent } from './action/action-dialog.component';\nimport { TeamMemberDialogComponent } from './teammember/teammember-dialog.component';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\nimport { Team } from './team';\nimport { TeamMember } from './teammember/teammember';\nimport { Action } from './action/action';\nimport { ProjectRythm } from './projectrythm/projectrythm';\n\n@Component({\n  selector: 'team-view',\n  templateUrl: './team-view.html',\n  animations: [\n    trigger('fade', [\n      state('void', style({ opacity: 0 })),\n      transition(':enter, :leave', [\n        animate('200ms ease-in')\n      ])\n    ])\n  ]\n})\n\nexport class TeamViewComponent {\n  panelOpenState: any;\n\n  id: number;\n  team: Team;\n  employee = [];\n  employees = [];\n\n  customerTeamMembers = [];\n  customerActions = [];\n  customerProjectRythms = [];\n\n  customerAction = new Action();\n  customerProjectRythm = new ProjectRythm();\n  customerTeamMember = new TeamMember();\n\n  rythmFrequency = ['Daily', 'Weekly', 'Monthly', 'Quaterly', 'Yearly'];\n\n  constructor(private dataService: DataService, private router: Router, private route: ActivatedRoute,\n    private dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n\n    this.route.params.subscribe(params => {\n      this.id = +params['id']; // (+) converts string 'id' to a number\n      if (!isNaN(this.id)) {\n\n        this.dataService.getEntityData('teams', this.id)\n          .then((resCustomerData) => {\n            this.team = resCustomerData;\n            this.team.teamMembers.forEach(e => this.customerTeamMembers.push(e));\n            this.team.actions.forEach(e => this.customerActions.push(e));\n            this.team.projectRythms.forEach(e => this.customerProjectRythms.push(e));\n          }).then(() => {\n            for (let i = 0; i < this.customerTeamMembers.length; i++) {\n              this.dataService.getEntityData('employees', this.customerTeamMembers[i].employeeId)\n                .then((resCustomerData) => {\n                  this.customerTeamMembers[i].name = resCustomerData.name;\n                });\n            }\n          });\n\n\n        this.dataService.getEntityAllData('employees')\n          .then((resEmployeeData) => {\n            resEmployeeData.forEach(e => this.employees.push(e));\n          });\n      }\n    });\n  }\n\n  openDialog(entityName) {\n    if (entityName === 'teammembers') {\n      this.customerTeamMember = new TeamMember();\n      this.openEntityDialog(TeamMemberDialogComponent, entityName, this.customerTeamMembers);\n    }\n    else if (entityName === 'actions') {\n      this.customerAction = new Action();\n      this.openEntityDialog(ActionDialogComponent, entityName, this.customerActions);\n    }\n    else if (entityName === 'projectrythms') {\n      this.customerProjectRythm = new ProjectRythm();\n      this.openEntityDialog(ProjectRythmDialogComponent, entityName, this.customerProjectRythms);\n    }\n    else {\n      console.log(entityName + \" not found\");\n    }\n  }\n\n  openEntityDialog(dialogComponent, entityName, entityArray) {\n    let dialogRef = this.dialog.open(dialogComponent, {\n      data: this\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result !== 'dialogDismissed' && result !== undefined) {\n        if (entityName === 'teammembers') {\n          this.addNewTeamMember(entityName, result, entityArray);\n        }\n        else {\n          this.addNewEntity(entityName, result, entityArray);\n        }\n      }\n    });\n  }\n\n  addNewEntity(entityName, entity, entityArray) {\n    entity.teamId = this.id;\n    this.dataService.postEntity(entityName, entity)\n      .then((resCustomerData) => {\n        entityArray.push(resCustomerData);\n      },\n      (err) => console.log(\"address could not be added :\" + err)\n      );\n  }\n\n  addNewTeamMember(entityName, entity, entityArray) {\n    entity.team_Id = this.id;\n    this.dataService.postEntity(entityName, entity)\n      .then((resCustomerData: any) => {\n        let tempEntity = resCustomerData;\n        this.dataService.getEntityData('employees', tempEntity.employeeId)\n          .then((resData: any) => {\n            tempEntity.name = resData.name;\n          },\n          (err) => console.log(\"Emplyee name could not be fetched :\" + err)\n          );\n        entityArray.push(tempEntity);\n      },\n      (err) => console.log(entityName + \" could not be added :\" + err)\n      );\n  }\n\n  openUpdateDialog(entityName: String, id: number) {\n    if (entityName === 'teammembers') {\n      this.customerTeamMember = this.customerTeamMembers[this.customerTeamMembers.findIndex(e => e.id === id)];\n      this.openEntityUpdateDialog(entityName, TeamMemberDialogComponent, id, this.customerTeamMembers);\n    }\n    else if (entityName === 'actions') {\n      this.customerAction = this.customerActions[this.customerActions.findIndex(e => e.id === id)];\n      this.openEntityUpdateDialog(entityName, ActionDialogComponent, id, this.customerActions);\n    }\n    else if (entityName === 'projectrythms') {\n      this.customerProjectRythm = this.customerProjectRythms[this.customerProjectRythms.findIndex(e => e.id === id)];\n      this.openEntityUpdateDialog(entityName, ProjectRythmDialogComponent, id, this.customerProjectRythms);\n    }\n    else {\n      console.log(entityName + \" not found\");\n    }\n  }\n\n  openEntityUpdateDialog(entityName, dialogComponent, id, entityArray): void {\n    const index = entityArray.findIndex(e => e.id === id);\n    let entity = entityArray[index];\n    var entityCopy = Object.assign({}, entity);\n    let dialogRef = this.dialog.open(dialogComponent, {\n      data: this\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result !== 'dialogDismissed' && result !== undefined) {\n        if (entityName === 'teammembers')\n          this.updateTeamMember(entityName, id, result, entityArray);\n        else\n          this.updateEntity(entityName, id, result, entityArray);\n      } else {\n        entityArray[index] = entityCopy;\n      }\n    });\n  }\n\n  updateEntity(entityName, id, entity, entityArray) {\n    this.dataService.updateEntity(entityName, id, entity)\n      .then((resCustomerData) => {\n        let index = entityArray.findIndex(e => e.id === entity.id);\n        entityArray[index] = entity;\n      },\n      (err) => console.log(entityName + \" could not be updated :\" + err)\n      );\n  }\n\n  updateTeamMember(entityName, id, entity, entityArray) {\n    this.dataService.getEntityData('employees', entity.employeeId)\n      .then((resData) => {\n        var empName = resData.name;\n\n        this.dataService.updateEntity(entityName, id, entity)\n          .then((resCustomerData) => {\n            let index = entityArray.findIndex(e => e.id === entity.id);\n            entity.name = empName;\n            entityArray[index] = entity;\n          },\n          (err) => console.log(entityName + \" could not be updated :\" + err)\n          );\n      },\n      (err) => console.log(\"employee name could not be fetched :\" + err)\n      );\n  }\n\n  navigateViewEmployee(id) {\n    this.router.navigate(['view/employee', id], { skipLocationChange: false });\n  }\n\n  delelteEntity(entityName, id, entityArray) {\n    this.dataService.delelteEntity(entityName, id)\n      .then((resCustomerData) => {\n        entityArray.splice(entityArray.findIndex(function(i) {\n          return i.id === id;\n        }), 1);\n      },\n      (err) => console.log(entityName + \" could not be deleted :\" + err)\n      );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/team/team-view.component.ts","module.exports = \"   <div *ngIf=\\\"team != undefined\\\">\\n      <h2 class=\\\"tos-entity-name\\\">{{team.name}}</h2>\\n    <span class=\\\"tos-entity-top-content\\\">\\n       <i class=\\\"fa fa-bullseye tos-icons\\\" title=\\\"Team Specialization\\\" aria-hidden=\\\"true\\\"></i>\\n       <a class=\\\"tos-text\\\">{{team.specialization}}</a>\\n    </span>\\n   </div>\\n   <mat-accordion [multi]=\\\"true\\\" @fade>\\n\\n   <mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\" [expanded]=\\\"true\\\">\\n     <mat-expansion-panel-header>\\n       <mat-panel-title>\\n     <h3>Team Members</h3>\\n       </mat-panel-title>\\n       <mat-panel-description>\\n           <!--Currently I am {{panelOpenState ? 'open' : 'closed'}}-->\\n       </mat-panel-description>\\n     </mat-expansion-panel-header>\\n     <div class=\\\" tos-button-right\\\">\\n       <span  (click)=\\\"openDialog('teammembers')\\\" class=\\\"tos-add-button\\\">+</span>\\n     </div>\\n     <div class=\\\"container\\\" fxlayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1%\\\" fxLayoutAlign=\\\"flex-start\\\">\\n        <div fxFlex=\\\"30%\\\" *ngFor = \\\"let member of customerTeamMembers\\\">\\n           <mat-card class=\\\"example-card\\\" >\\n              <mat-card-header>\\n                 <mat-card-title>\\n                    <h3 class=\\\"shake-hover-style\\\"><span  (click)=\\\"navigateViewEmployee(member.employeeId)\\\" class=\\\"tos-cust-heading\\\">{{member.name}} </span></h3>\\n                </mat-card-title>\\n              </mat-card-header>\\n              <mat-card-content>\\n                 Role :{{member.role}} <br>\\n                 Velocity : {{ member.velocity}}\\n              </mat-card-content>\\n              <mat-card-actions>\\n                 <span (click)=\\\"openUpdateDialog('teammembers',member.id)\\\" style=\\\"cursor:pointer;color:grey\\\"><mat-icon  >create</mat-icon></span>&emsp;\\n                 <span (click)=\\\"delelteEntity('teammembers',member.id,customerTeamMembers )\\\" style=\\\"cursor:pointer; color:grey\\\"><mat-icon  >delete</mat-icon></span>\\n              </mat-card-actions>\\n           </mat-card>\\n        </div>\\n        <div *ngIf=\\\"customerTeamMembers.length===0\\\" class=\\\"tos-content-color\\\">No Team Members</div>\\n     </div>\\n   </mat-expansion-panel>\\n\\n   <mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\" [expanded]=\\\"true\\\">\\n     <mat-expansion-panel-header>\\n       <mat-panel-title>\\n     <h3>Actions</h3>\\n       </mat-panel-title>\\n       <mat-panel-description>\\n           <!--Currently I am {{panelOpenState ? 'open' : 'closed'}}-->\\n       </mat-panel-description>\\n     </mat-expansion-panel-header>\\n     <div class=\\\" tos-button-right\\\">\\n       <span  (click)=\\\"openDialog('actions')\\\" class=\\\"tos-add-button\\\">+</span>\\n     </div>\\n     <div class=\\\"container\\\" fxlayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1%\\\" fxLayoutAlign=\\\"flex-start\\\">\\n        <div fxFlex=\\\"30%\\\" *ngFor = \\\"let action of customerActions\\\">\\n           <mat-card class=\\\"example-card\\\" >\\n              <mat-card-header>\\n                 <mat-card-title> <h3><span class=\\\"tos-cust-heading\\\"> {{action.details}}</span></h3></mat-card-title>\\n        <!--         <mat-card-subtitle> </mat-card-subtitle> -->\\n              </mat-card-header>\\n              <mat-card-content>\\n                 Cause: {{action.cause}}<br>\\n                 PLatform: {{action.platform}}<br> Status: {{action.status}}\\n              </mat-card-content>\\n              <mat-card-actions>\\n                <span (click)=\\\"openUpdateDialog('actions',action.id)\\\" style=\\\"cursor:pointer;color:grey\\\"><mat-icon  >create</mat-icon></span>&emsp;\\n                <span (click)=\\\"delelteEntity('actions',action.id,customerActions)\\\" style=\\\"cursor:pointer; color:grey\\\"><mat-icon  >delete</mat-icon></span>\\n              </mat-card-actions>\\n           </mat-card>\\n        </div>\\n        <div *ngIf=\\\"customerActions.length===0\\\" class=\\\"tos-content-color\\\">No Customer Actions Defined</div>\\n     </div>\\n   </mat-expansion-panel>\\n\\n      <mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\" [expanded]=\\\"true\\\">\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n              <h3>Rythm</h3>\\n          </mat-panel-title>\\n          <mat-panel-description>\\n              <!--Currently I am {{panelOpenState ? 'open' : 'closed'}}-->\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n        <div class=\\\" tos-button-right\\\">\\n          <span  (click)=\\\"openDialog('projectrythms')\\\" class=\\\"tos-add-button\\\">+</span>\\n        </div>\\n        <div class=\\\"container\\\" fxlayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1%\\\" fxLayoutAlign=\\\"flex-start\\\">\\n           <div fxFlex=\\\"30%\\\" *ngFor = \\\"let projectRythm of customerProjectRythms\\\">\\n              <mat-card class=\\\"example-card\\\" >\\n                 <mat-card-header>\\n                    <mat-card-title><h3><span class=\\\"tos-cust-heading\\\">{{projectRythm.event}}</span></h3></mat-card-title>\\n                 </mat-card-header>\\n                 <mat-card-content>\\n                    Frequency: {{projectRythm.frequency}} <br>Who: {{projectRythm.whoRythm}} <br>Where: {{projectRythm.whereRythm}}\\n                 </mat-card-content>\\n                 <mat-card-actions>\\n                   <span (click)=\\\"openUpdateDialog('projectrythms',projectRythm.id)\\\" style=\\\"cursor:pointer;color:grey\\\"><mat-icon  >create</mat-icon></span>&emsp;\\n                   <span (click)=\\\"delelteEntity('projectrythms',projectRythm.id,customerProjectRythms)\\\" style=\\\"cursor:pointer; color:grey\\\"><mat-icon  >delete</mat-icon></span>\\n                 </mat-card-actions>\\n              </mat-card>\\n           </div>\\n           <div *ngIf=\\\"customerProjectRythms.length===0\\\" class=\\\"tos-content-color\\\">No Project Rythm Available</div>\\n        </div>\\n      </mat-expansion-panel>\\n\\n</mat-accordion>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/team/team-view.html\n// module id = ./src/app/customer/team/team-view.html\n// module chunks = main","export class Team {\r\n  id = '';\r\n  specialization = '';\r\n  customerId = '';\r\n  name = '';\r\n  createdAt = '';\r\n  teamMembers = [];\r\n  actions = [];\r\n  projectRythms = [];\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/team/team.ts","import { Component, Inject, OnInit} from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'teammember-dialog',\n  templateUrl: './teammember-dialog.html'\n})\nexport class TeamMemberDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<TeamMemberDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/team/teammember/teammember-dialog.component.ts","module.exports = \"<div *ngIf=\\\"  data.customerTeamMember!==undefined\\\" >\\n   <h2 *ngIf=\\\"data.customerTeamMember.id === ''\\\" mat-dialog-title>Create TeamMember</h2>\\n   <h2   *ngIf=\\\"data.customerTeamMember.id !== ''\\\" mat-dialog-title>Update TeamMember</h2>\\n   <mat-dialog-content>\\n      <form id=\\\"formNewTeamMemberUpdate\\\" name=\\\"formNewTeamMemberUpdate\\\"  #teamMemberUpdate=\\\"ngForm\\\">\\n        <mat-form-field>\\n          <mat-select [(value)]=\\\"selected\\\" [(ngModel)]=\\\"data.customerTeamMember.employeeId\\\" placeholder=\\\"Employee\\\" name=\\\"employeeId\\\" >\\n            <mat-option *ngFor=\\\"let employee of data.employees\\\" [value]=\\\"employee.id\\\">\\n              {{ employee.name }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field><br>\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Role\\\" name=\\\"role\\\" [value]=\\\"data.customerTeamMember.role\\\" [(ngModel)]=\\\"data.customerTeamMember.role\\\" ngModel><br>\\n         </mat-form-field><br>\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Velocity (Ave. Story Points/Sprint)\\\" name=\\\"velocity\\\" [value]=\\\"data.customerTeamMember.velocity\\\" [(ngModel)]=\\\"data.customerTeamMember.velocity\\\" ngModel>\\n         </mat-form-field>\\n      </form>\\n   </mat-dialog-content>\\n   <mat-dialog-actions>\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.customerTeamMember *ngIf=\\\"data.customerTeamMember.id !== ''\\\">Update</button>\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.customerTeamMember *ngIf=\\\"data.customerTeamMember.id === ''\\\">Add</button>\\n      <button mat-button mat-dialog-close=\\\"dialogDismissed\\\" disableRipple=\\\"true\\\" class=\\\"tos-button\\\">Cancel</button>\\n   </mat-dialog-actions>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/team/teammember/teammember-dialog.html\n// module id = ./src/app/customer/team/teammember/teammember-dialog.html\n// module chunks = main","export class TeamMember {\r\n  id = '';\r\n  teamId = '';\r\n  role = '';\r\n  velocity = '';\r\n  employeeId = '';\r\n  createdAt = '';\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/team/teammember/teammember.ts","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'travel-dialog',\n  templateUrl: './travel-dialog.html'\n})\nexport class TravelDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<TravelDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/travel/travel-dialog.component.ts","module.exports = \"<div *ngIf=\\\"  data.customerTravel!==undefined\\\" >\\n   <h2 *ngIf=\\\"data.customerTravel.id === ''\\\" mat-dialog-title>Create Travel</h2>\\n   <h2   *ngIf=\\\"data.customerTravel.id !== ''\\\" mat-dialog-title>Update Travel</h2>\\n   <mat-dialog-content>\\n      <form id=\\\"formNewTravelUpdate\\\" name=\\\"formNewTravelUpdate\\\"  #travelDataUpdate=\\\"ngForm\\\">\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Person name\\\" name=\\\"name\\\" [value]=\\\"data.customerTravel.name\\\" [(ngModel)]=\\\"data.customerTravel.name\\\" ngModel><br>\\n         </mat-form-field><br>\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Travel From\\\" name=\\\"travellingFrom\\\" [value]=\\\"data.customerTravel.travellingFrom\\\" [(ngModel)]=\\\"data.customerTravel.travellingFrom\\\" ngModel>\\n         </mat-form-field><br>\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Travel To\\\" name=\\\"travellingTo\\\" [value]=\\\"data.customerTravel.travellingTo\\\" [(ngModel)]=\\\"data.customerTravel.travellingTo\\\" ngModel>\\n         </mat-form-field><br>\\n         <mat-form-field>\\n            <input matInput name=\\\"travellingFromDate\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Travel from Date\\\"\\n            [value]=\\\"data.customerTravel.travellingFromDate\\\"\\n            [(ngModel)]=\\\"data.customerTravel.travellingFromDate\\\" ngModel>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker  #picker></mat-datepicker>\\n         </mat-form-field><br>\\n         <mat-form-field>\\n            <input matInput name=\\\"travellingToDate\\\" [matDatepicker]=\\\"pickers\\\" placeholder=\\\"Travel to Date\\\"\\n            [value]=\\\"data.customerTravel.travellingToDate\\\"\\n            [(ngModel)]=\\\"data.customerTravel.travellingToDate\\\" ngModel>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"pickers\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #pickers></mat-datepicker>\\n         </mat-form-field><br>\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Purpose\\\" name=\\\"purpose\\\" [value]=\\\"data.customerTravel.purpose\\\" [(ngModel)]=\\\"data.customerTravel.purpose\\\" ngModel>\\n         </mat-form-field>\\n      </form>\\n   </mat-dialog-content>\\n   <mat-dialog-actions>\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.customerTravel *ngIf=\\\"data.customerTravel.id !== ''\\\">Update</button>\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.customerTravel *ngIf=\\\"data.customerTravel.id === ''\\\">Add</button>\\n      <button mat-button mat-dialog-close=\\\"dialogDismissed\\\" disableRipple=\\\"true\\\" class=\\\"tos-button\\\">Cancel</button>\\n   </mat-dialog-actions>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/customer/travel/travel-dialog.html\n// module id = ./src/app/customer/travel/travel-dialog.html\n// module chunks = main","export class Travel {\r\n  id = '';\r\n  name = '';\r\n  customerId = '';\r\n  travellingFrom = '';\r\n  travellingTo = '';\r\n  travellingFromDate = '';\r\n  travellingToDate = '';\r\n  purpose = '';\r\n  createdAt = '';\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/customer/travel/travel.ts","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'certification-dialog',\n  templateUrl: './certification-dialog.html'\n})\nexport class CertificationDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<CertificationDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employee/certification/certification-dialog.component.ts","module.exports = \"<div *ngIf=\\\"  data.employeeCertification!==undefined\\\" >\\r\\n   <h2 *ngIf=\\\"data.employeeCertification.id === ''\\\" mat-dialog-title>Add Certification</h2>\\r\\n   <h2   *ngIf=\\\"data.employeeCertification.id !== ''\\\" mat-dialog-title>Update Certification</h2>\\r\\n   <mat-dialog-content>\\r\\n      <form id=\\\"formNewCertificationUpdate\\\" name=\\\"formNewCertificationUpdate\\\"  #certificationDataUpdate=\\\"ngForm\\\">\\r\\n         <mat-form-field >\\r\\n            <input matInput placeholder=\\\"Name\\\" name=\\\"name\\\" [value]=\\\"data.employeeCertification.name\\\" [(ngModel)]=\\\"data.employeeCertification.name\\\" ngModel><br>\\r\\n         </mat-form-field>\\r\\n         <br>\\r\\n         <mat-form-field>\\r\\n            <mat-select [(value)]=\\\"selected\\\" [(ngModel)]=\\\"data.employeeCertification.yearOfCertification\\\" placeholder=\\\"Year of Certification\\\" name=\\\"yearOfCertification\\\" >\\r\\n            <mat-option *ngFor=\\\"let yearCerti of data.certificationYearOfCertification\\\" [value]=\\\"yearCerti\\\">\\r\\n            {{ yearCerti }}\\r\\n            </mat-option>\\r\\n            </mat-select>\\r\\n         </mat-form-field>\\r\\n      </form>\\r\\n   </mat-dialog-content>\\r\\n   <mat-dialog-actions>\\r\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.employeeCertification *ngIf=\\\"data.employeeCertification.id !== ''\\\">Update</button>\\r\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.employeeCertification  *ngIf=\\\"data.employeeCertification.id === ''\\\">Add</button>\\r\\n      <button mat-button mat-dialog-close=\\\"dialogDismissed\\\" disableRipple=\\\"true\\\" class=\\\"tos-button\\\">Cancel</button>\\r\\n   </mat-dialog-actions>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employee/certification/certification-dialog.html\n// module id = ./src/app/employee/certification/certification-dialog.html\n// module chunks = main","export class Certification {\r\n  id = '';\r\n  name = '';\r\n  employeeId = '';\r\n  yearOfCertification = '';\r\n  createdAt = '';\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employee/certification/certification.ts","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'employee-dialog',\n  templateUrl: './employee-dialog.html'\n})\nexport class EmployeeDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<EmployeeDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employee/employee-dialog.component.ts","module.exports = \"<div *ngIf=\\\"  data.employee!==undefined \\\" >\\r\\n   <h2 *ngIf=\\\"data.employee.id === ''\\\" mat-dialog-title>Add Employee</h2>\\r\\n   <h2   *ngIf=\\\"data.employee.id !== ''\\\" mat-dialog-title>Update Employee</h2>\\r\\n   <mat-dialog-content>\\r\\n      <form id=\\\"formNewEmployee2\\\" name=\\\"formNewEmployeeUpdate\\\"  #employeeDataUpdate=\\\"ngForm\\\">\\r\\n         <mat-form-field >\\r\\n            <input matInput placeholder=\\\"Name\\\" name=\\\"name\\\" [value]=\\\"data.employee.name\\\" [(ngModel)]=\\\"data.employee.name\\\" ngModel><br>\\r\\n         </mat-form-field>\\r\\n         <br>\\r\\n         <mat-form-field>\\r\\n            <input matInput name=\\\"joiningDate\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Joining Date\\\"\\r\\n            [value]=\\\"data.employee.joiningDate\\\"\\r\\n            [(ngModel)]=\\\"data.employee.joiningDate\\\" ngModel>\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker  #picker></mat-datepicker>\\r\\n         </mat-form-field>\\r\\n         <br>\\r\\n         <mat-form-field >\\r\\n            <input matInput placeholder=\\\"Experience (in years)\\\" name=\\\"yearsOfExperience\\\" [value]=\\\"data.employee.yearsOfExperience\\\" [(ngModel)]=\\\"data.employee.yearsOfExperience\\\" ngModel>\\r\\n         </mat-form-field>\\r\\n         <br>\\r\\n         <mat-form-field >\\r\\n            <textarea matInput placeholder=\\\"Responsibilities (Current Project)\\\" name=\\\"responsibilities\\\" [value]=\\\"data.employee.responsibilities\\\"\\r\\n            [(ngModel)]=\\\"data.employee.responsibilities\\\" ngModel></textarea>\\r\\n         </mat-form-field>\\r\\n      </form>\\r\\n   </mat-dialog-content>\\r\\n   <mat-dialog-actions>\\r\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.employee *ngIf=\\\"data.employee.id !== ''\\\">Update</button>\\r\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.employee  *ngIf=\\\"data.employee.id === ''\\\">Add</button>\\r\\n      <button mat-button mat-dialog-close=\\\"dialogDismissed\\\" disableRipple=\\\"true\\\" class=\\\"tos-button\\\">Cancel</button>\\r\\n   </mat-dialog-actions>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employee/employee-dialog.html\n// module id = ./src/app/employee/employee-dialog.html\n// module chunks = main","import { Component, Output, EventEmitter } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\nimport { DataService } from '../services/data.service';\nimport { UtilityService } from '../services/utility.service';\n\nimport { EmployeeDialogComponent } from './employee-dialog.component';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Employee } from './employee';\nimport { BreadCrumb } from '../menu/breadCrumb';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n@Component({\n  selector: 'employee-main',\n  templateUrl: './employee-main.html',\n  animations: [\n    trigger('fade', [\n      state('void', style({ opacity: 0 })),\n      transition(':enter, :leave', [\n        animate('200ms ease-in')\n      ])\n    ])\n  ]\n})\nexport class EmployeeMainComponent {\n  @Output() notify: EventEmitter<string> = new EventEmitter<string>();\n  employees = [];\n  employee = new Employee();\n  bread: BreadCrumb;\n\n  constructor(private dataService: DataService, private router: Router, private route: ActivatedRoute,\n    private dialog: MatDialog, private utilityService: UtilityService) {\n  }\n\n  ngOnInit() {\n    this.utilityService.currentBreadCrumb.subscribe(bread => this.bread = bread);\n    this.dataService.getEntityAllData('employees')\n      .then((resEmployeeData) => {\n        resEmployeeData.forEach(e => this.employees.push(e));\n      },\n      (err) => console.log(\"employees could not be fetched :\" + err)\n      );\n  }\n\n  openDialog(): void {\n    this.employee = new Employee();\n    let dialogRef = this.dialog.open(EmployeeDialogComponent, {\n      data: this\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result !== 'dialogDismissed' && result !== undefined) {\n        this.addNewEntity('employees', result, this.employees)\n      }\n    });\n  }\n\n  addNewEntity(entityName, entity, entityArray) {\n    this.dataService.postEntity(entityName, entity)\n      .then((resEmployeeData) => {\n        entityArray.push(resEmployeeData);\n      },\n      (err) => console.log(entityName + \" could not be added :\" + err)\n      );\n  }\n\n  openUpdateDialog(id: number): void {\n    const index = this.employees.findIndex(e => e.id === id);\n    this.employee = this.employees[index];\n    var employeeCopy = Object.assign({}, this.employee);\n\n    let dialogRef = this.dialog.open(EmployeeDialogComponent, {\n      data: this\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result !== 'dialogDismissed' && result !== undefined) {\n        this.updateEntity('employees', id, result, this.employees);\n      } else {\n        this.employees[index] = employeeCopy;\n      }\n    });\n  }\n\n  updateEntity(entityName, id, entity, entityArray) {\n    this.dataService.updateEntity(entityName, id, entity)\n      .then((resEmployeeData) => {\n        let index = entityArray.findIndex(e => e.id === entity.id);\n        entityArray[index] = entity;\n      },\n      (err) => console.log(entityName + \" could not be updated :\" + err)\n      );\n  }\n\n  delelteEmployee(id) {\n    let entity = this.employees[this.employees.findIndex(e => e.id === id)];\n    if (entity.teamMembers.length > 0) {\n      alert(\"Please unassign employee from all teams before deleting\");\n    }\n    else {\n      this.dataService.delelteEntity('employees', id)\n        .then((resEmployeeData) => {\n          this.employees.splice(this.employees.findIndex(function(i) {\n            return i.id === id;\n          }), 1);\n        },\n        (err) => console.log(\"Employee could not be deleted :\" + err)\n        );\n    }\n  }\n\n  navigateViewEmployee(id) {\n    let entity = this.employees[this.employees.findIndex(e => e.id === id)];\n    this.utilityService.addBreadCrumb(2, '', 'view/employee', id, 'entity', entity.name);\n    this.router.navigate(['view/employee', id], { skipLocationChange: false });\n  }\n\n  checkEntity(entity) {\n    return this.utilityService.checkEntity(entity);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employee/employee-main.component.ts","module.exports = \"   <h3 class=\\\"tos-component-heading\\\">All Employees</h3>\\n   <div class=\\\" tos-button-right\\\">\\n      <span  (click)=\\\"openDialog()\\\" class=\\\"tos-add-button\\\">+</span>\\n   </div>\\n   <div class=\\\"container\\\" fxlayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1%\\\" fxLayoutAlign=\\\"flex-start\\\"  @fade>\\n        <div fxFlex=\\\"30%\\\"  *ngFor = \\\"let emp of employees\\\">\\n         <mat-card class=\\\"example-card\\\"  >\\n            <mat-card-header>\\n               <mat-card-title>\\n                  <h3 class=\\\"shake-hover-style\\\">\\n                    <span (click)=\\\"navigateViewEmployee(emp.id)\\\" class=\\\"tos-cust-heading\\\"> {{emp.name}}</span>\\n                  </h3></mat-card-title>\\n          <!--     <mat-card-subtitle><span (click)=\\\"navigateViewEmployee(emp.id)\\\" class=\\\"tos-cust-heading\\\">Employee Id : {{emp.id}} </span></mat-card-subtitle> -->\\n            </mat-card-header>\\n            <mat-card-content>\\n    <div>\\n            <span>   Joining Date: {{emp.joiningDate | date : 'd-M-yy'}} </span><br>\\n          <!--  <span> {{emp.responsibilities}}</span><br> -->\\n                <span>Experience: {{emp.yearsOfExperience}} years</span>\\n             </div>\\n            </mat-card-content>\\n            <mat-card-actions>\\n               <span (click)=\\\"delelteEmployee(emp.id)\\\" style=\\\"cursor:pointer; color:grey\\\"><mat-icon  >delete</mat-icon></span>&emsp;\\n               <span (click)=\\\"openUpdateDialog(emp.id)\\\" style=\\\"cursor:pointer;color:grey\\\"><mat-icon  >create</mat-icon></span>\\n            </mat-card-actions>\\n         </mat-card>\\n      </div>\\n      <div *ngIf=\\\"checkEntity(employees)\\\" class=\\\"tos-content-color\\\">No employees Present </div>\\n   </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employee/employee-main.html\n// module id = ./src/app/employee/employee-main.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { DataService } from '../services/data.service';\nimport { Employee } from './employee';\nimport { EmployeeDialogComponent } from './employee-dialog.component';\nimport { SkillDialogComponent } from './skill/skill-dialog.component';\nimport { CertificationDialogComponent } from './certification/certification-dialog.component';\nimport { TrainingDialogComponent } from './training/training-dialog.component';\nimport { FeedbackDialogComponent } from './feedback/feedback-dialog.component';\nimport { ImprovementAreaDialogComponent } from './improvementarea/improvementarea-dialog.component';\n\nimport { Skill } from './skill/skill';\nimport { ImprovementArea } from './improvementarea/improvementarea';\nimport { Feedback } from './feedback/feedback';\nimport { Certification } from './certification/certification';\nimport { Training } from './training/training';\n\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n@Component({\n  selector: 'employee-view',\n  templateUrl: './employee-view.html',\n  animations: [\n    trigger('fade', [\n      state('void', style({ opacity: 0 })),\n      transition(':enter, :leave', [\n        animate('200ms ease-in')\n      ])\n    ])\n  ]\n})\nexport class EmployeeViewComponent {\n\n  panelOpenState: any;\n  id: number;\n\n  employee: Employee;\n  employeeSkills = [];\n  employeeCertifications = [];\n  employeeTrainings = [];\n  employeeFeedbacks = [];\n  employeeImprovementAreas = [];\n  employeeTeamMembers = [];\n\n  employeeSkill = new Skill();\n  employeeCertification = new Certification();\n  employeeTraining = new Training();\n  employeeFeedback = new Feedback();\n  employeeImprovementArea = new ImprovementArea();\n\n  skillRatings = ['1', '2', '3', '4', '5'];\n  trainingModes = ['online', 'On-site', 'Live On-Line', 'On Demand', 'Classroom'];\n\n  certificationYearOfCertification = [];\n  certificationCurrentYear: number;\n\n  teams = [];\n  Arr = Array; //Array type captured in a variable\n\n  constructor(private dataService: DataService, private router: Router, private route: ActivatedRoute,\n    private dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n\n    var date = new Date();\n    this.certificationCurrentYear = date.getFullYear();\n    var startYear = this.certificationCurrentYear - 25;\n\n    for (let i = this.certificationCurrentYear; i >= startYear; i--) {\n      this.certificationYearOfCertification.push(i.toString());\n    }\n\n    this.route.params.subscribe(params => {\n      this.id = +params['id']; // (+) converts string 'id' to a number\n      if (!isNaN(this.id)) {\n        this.dataService.getEntityData('employees', this.id)\n          .then((resemployeeData) => {\n            this.employee = resemployeeData;\n\n            this.employee.skills.forEach(e => this.employeeSkills.push(e));\n            this.employee.certifications.forEach(e => this.employeeCertifications.push(e));\n            this.employee.trainings.forEach(e => this.employeeTrainings.push(e));\n            this.employee.feedbacks.forEach(e => this.employeeFeedbacks.push(e));\n            this.employee.improvementAreas.forEach(e => this.employeeImprovementAreas.push(e));\n            this.employee.teamMembers.forEach(e => this.employeeTeamMembers.push(e));\n          })\n          .then(() => {\n            for (let i = 0; i < this.employeeTeamMembers.length; i++) {\n              this.dataService.getEntityData('teams', this.employeeTeamMembers[i].team_Id)\n                .then((resCustomerData) => {\n                  this.teams[i] = resCustomerData;\n                });\n            }\n          });\n      }\n    });\n  }\n\n  openDialog(entityName): void {\n    if (entityName === 'skills') {\n      this.employeeSkill = new Skill();\n      this.openEntityDialog(SkillDialogComponent, entityName, this.employeeSkills);\n    }\n    else if (entityName === 'certifications') {\n      this.employeeCertification = new Certification();\n      this.openEntityDialog(CertificationDialogComponent, entityName, this.employeeCertifications);\n    }\n    else if (entityName === 'trainings') {\n      this.employeeTraining = new Training();\n      this.openEntityDialog(TrainingDialogComponent, entityName, this.employeeTrainings);\n    }\n    else if (entityName === 'feedbacks') {\n      this.employeeFeedback = new Feedback();\n      this.openEntityDialog(FeedbackDialogComponent, entityName, this.employeeFeedbacks);\n    }\n    else if (entityName === 'improvementareas') {\n      this.employeeImprovementArea = new ImprovementArea();\n      this.openEntityDialog(ImprovementAreaDialogComponent, entityName, this.employeeImprovementAreas);\n    }\n    else {\n      console.log(entityName + \" not found\");\n    }\n  }\n\n  openEntityDialog(dialogComponent, entityName, entityArray) {\n    let dialogRef = this.dialog.open(dialogComponent, {\n      data: this\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result !== 'dialogDismissed' && result !== undefined) {\n        this.addNewEntity(entityName, result, entityArray);\n      }\n    });\n  }\n\n  addNewEntity(entityName, entity, entityArray) {\n    entity.employeeId = this.id;\n    this.dataService.postEntity(entityName, entity)\n      .then((resCustomerData) => {\n        entityArray.push(resCustomerData);\n      },\n      (err) => console.log(entityName + \" could not be added :\" + err)\n      );\n  }\n\n  openUpdateDialog(entityName: String, id: number): void {\n    if (entityName === 'skills') {\n      this.employeeSkill = this.employeeSkills[this.employeeSkills.findIndex(e => e.id === id)];\n      this.openEntityUpdateDialog(entityName, SkillDialogComponent, id, this.employeeSkills);\n    }\n    else if (entityName === 'certifications') {\n      this.employeeCertification = this.employeeCertifications[this.employeeCertifications.findIndex(e => e.id === id)];\n      this.openEntityUpdateDialog(entityName, CertificationDialogComponent, id, this.employeeCertifications);\n    }\n    else if (entityName === 'trainings') {\n      this.employeeTraining = this.employeeTrainings[this.employeeTrainings.findIndex(e => e.id === id)];\n      this.openEntityUpdateDialog(entityName, TrainingDialogComponent, id, this.employeeTrainings);\n    }\n    else if (entityName === 'feedbacks') {\n      this.employeeFeedback = this.employeeFeedbacks[this.employeeFeedbacks.findIndex(e => e.id === id)];\n      this.openEntityUpdateDialog(entityName, FeedbackDialogComponent, id, this.employeeFeedbacks);\n    }\n    else if (entityName === 'improvementareas') {\n      this.employeeImprovementArea = this.employeeImprovementAreas[this.employeeImprovementAreas.findIndex(e => e.id === id)];\n      this.openEntityUpdateDialog(entityName, ImprovementAreaDialogComponent, id, this.employeeImprovementAreas);\n    }\n    else {\n      console.log(entityName + \" not found\");\n    }\n  }\n\n  openEntityUpdateDialog(entityName, dialogComponent, id, entityArray): void {\n    const index = entityArray.findIndex(e => e.id === id);\n    let entity = entityArray[index];\n    var entityCopy = Object.assign({}, entity);\n\n    let dialogRef = this.dialog.open(dialogComponent, {\n      data: this\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result !== 'dialogDismissed' && result !== undefined) {\n        this.updateEntity(entityName, id, result, entityArray);\n      } else {\n        entityArray[index] = entityCopy;\n      }\n    });\n  }\n\n  updateEntity(entityName, id, entity, entityArray) {\n    this.dataService.updateEntity(entityName, id, entity)\n      .then((resCustomerData) => {\n        let index = entityArray.findIndex(e => e.id === entity.id);\n        entityArray[index] = entity;\n      },\n      (err) => console.log(entityName + \" could not be updated :\" + err)\n      );\n  }\n\n  navigateViewTeam(teamId) {\n    this.router.navigate(['view/team', teamId], { skipLocationChange: false });\n  }\n\n  delelteEntity(entityName, id, entityArray) {\n    this.dataService.delelteEntity(entityName, id)\n      .then((resCustomerData) => {\n        entityArray.splice(entityArray.findIndex(function(i) {\n          return i.id === id;\n        }), 1);\n      },\n      (err) => console.log(entityName + \" could not be deleted :\" + err)\n      );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employee/employee-view.component.ts","module.exports = \"<div *ngIf=\\\"employee != undefined\\\">\\n   <h2 class=\\\"tos-entity-name\\\">{{employee.name}} </h2>\\n   <span class=\\\"tos-entity-top-content\\\">\\n\\n     <i class=\\\"fa fa-calendar tos-icons\\\" title=\\\"Joining Date\\\" aria-hidden=\\\"true\\\"></i>\\n     <a class=\\\"tos-text\\\">{{employee.joiningDate | date : 'd-M-yy'}}  </a>\\n     <i class=\\\"fa fa-mortar-board tos-icons\\\" title=\\\"Responsibilities\\\" aria-hidden=\\\"true\\\"></i>\\n   <a class=\\\"tos-text\\\">{{employee.responsibilities}} </a>\\n   <i class=\\\"fa fa-certificate tos-icons\\\" title=\\\"Years of Experience\\\" aria-hidden=\\\"true\\\"></i>\\n   <a class=\\\"tos-text\\\">{{employee.yearsOfExperience}} years of Experience </a>\\n   </span>\\n</div>\\n<mat-accordion [multi]=\\\"true\\\" @fade>\\n<mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\" [expanded]=\\\"true\\\">\\n<mat-expansion-panel-header>\\n   <mat-panel-title>\\n      <h3>Skills</h3>\\n   </mat-panel-title>\\n   <mat-panel-description>\\n      <!--Currently I am {{panelOpenState ? 'open' : 'closed'}}-->\\n   </mat-panel-description>\\n</mat-expansion-panel-header>\\n<div class=\\\" tos-button-right\\\">\\n   <span  (click)=\\\"openDialog('skills')\\\" class=\\\"tos-add-button\\\">+</span>\\n</div>\\n<div class=\\\"container\\\" fxlayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1%\\\" fxLayoutAlign=\\\"flex-start\\\">\\n   <div fxFlex=\\\"30%\\\" *ngFor = \\\"let skill of employeeSkills\\\" >\\n      <mat-card class=\\\"example-card\\\" >\\n         <mat-card-header>\\n            <mat-card-title>\\n               <h3><span class=\\\"tos-cust-heading\\\"> {{skill.name}}</span></h3>\\n               <span *ngIf=\\\"skill.rating !== ''\\\" class=\\\"tos-stars\\\">\\n                  <a class=\\\"tos-rating\\\" *ngFor=\\\"let i of Arr(+skill.rating).fill(1)\\\">\\n                     <mat-icon >star rate</mat-icon>\\n                  </a>\\n               </span>\\n            </mat-card-title>\\n         </mat-card-header>\\n         <mat-card-content>\\n            Worked for: {{skill.duration}} months<br>Last Used: {{skill.lastUsed}}<br>\\n         </mat-card-content>\\n         <mat-card-actions>\\n            <span (click)=\\\"openUpdateDialog('skills',skill.id)\\\" style=\\\"cursor:pointer;color:grey\\\">\\n               <mat-icon>create</mat-icon>\\n            </span>\\n            &emsp;\\n            <span (click)=\\\"delelteEntity('skills', skill.id, employeeSkills )\\\" style=\\\"cursor:pointer; color:grey\\\">\\n               <mat-icon>delete</mat-icon>\\n            </span>\\n         </mat-card-actions>\\n      </mat-card>\\n   </div>\\n   <div *ngIf=\\\"employeeSkills.length===0\\\"  class=\\\"tos-content-color\\\">No Skills Updated </div>\\n</div>\\n</mat-expansion-panel>\\n<mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\" [expanded]=\\\"true\\\">\\n<mat-expansion-panel-header>\\n   <mat-panel-title>\\n      <h3>Certifications</h3>\\n   </mat-panel-title>\\n   <mat-panel-description>\\n      <!--Currently I am {{panelOpenState ? 'open' : 'closed'}}-->\\n   </mat-panel-description>\\n</mat-expansion-panel-header>\\n<div class=\\\" tos-button-right\\\">\\n   <span  (click)=\\\"openDialog('certifications')\\\" class=\\\"tos-add-button\\\">+</span>\\n</div>\\n<div class=\\\"container\\\" fxlayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1%\\\" fxLayoutAlign=\\\"flex-start\\\">\\n   <div fxFlex=\\\"30%\\\" *ngFor = \\\"let certification of employeeCertifications\\\">\\n      <mat-card class=\\\"example-card\\\" >\\n         <mat-card-header>\\n            <mat-card-title>\\n               <h3><span class=\\\"tos-cust-heading\\\"> {{certification.name}}</span></h3>\\n            </mat-card-title>\\n         </mat-card-header>\\n         <mat-card-content>\\n            Certification Year : {{certification.yearOfCertification}}\\n         </mat-card-content>\\n         <mat-card-actions>\\n            <span (click)=\\\"openUpdateDialog('certifications',certification.id)\\\" style=\\\"cursor:pointer;color:grey\\\">\\n               <mat-icon  >create</mat-icon>\\n            </span>\\n            &emsp;\\n            <span (click)=\\\"delelteEntity('certifications', certification.id, employeeCertifications)\\\" style=\\\"cursor:pointer; color:grey\\\">\\n               <mat-icon  >delete</mat-icon>\\n            </span>\\n         </mat-card-actions>\\n      </mat-card>\\n   </div>\\n   <div *ngIf=\\\"employeeCertifications.length===0\\\"  class=\\\"tos-content-color\\\">No Certifications </div>\\n</div>\\n</mat-expansion-panel>\\n<mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\" [expanded]=\\\"true\\\">\\n<mat-expansion-panel-header>\\n   <mat-panel-title>\\n      <h3>Trainings</h3>\\n   </mat-panel-title>\\n   <mat-panel-description>\\n      <!--Currently I am {{panelOpenState ? 'open' : 'closed'}}-->\\n   </mat-panel-description>\\n</mat-expansion-panel-header>\\n<div class=\\\" tos-button-right\\\">\\n   <span  (click)=\\\"openDialog('trainings')\\\" class=\\\"tos-add-button\\\">+</span>\\n</div>\\n<div class=\\\"container\\\" fxlayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1%\\\" fxLayoutAlign=\\\"flex-start\\\">\\n   <div fxFlex=\\\"30%\\\" *ngFor = \\\"let training of employeeTrainings\\\">\\n      <mat-card class=\\\"example-card\\\" >\\n         <mat-card-header>\\n            <mat-card-title>\\n               <h3><span class=\\\"tos-cust-heading\\\"> {{training.name}}</span></h3>\\n            </mat-card-title>\\n            <!--     <mat-card-subtitle>Trainings</mat-card-subtitle> -->\\n         </mat-card-header>\\n         <mat-card-content>\\n            Mode : {{ training.mode}}<br>Training proposed Date : {{ training.proposedDate | date : 'd-M-yy'}}\\n            <br>Reason: {{ training.reason}}\\n         </mat-card-content>\\n         <mat-card-actions>\\n            <span (click)=\\\"openUpdateDialog('trainings',training.id)\\\" style=\\\"cursor:pointer;color:grey\\\">\\n               <mat-icon  >create</mat-icon>\\n            </span>\\n            &emsp;\\n            <span (click)=\\\"delelteEntity('trainings', training.id, employeeTrainings )\\\" style=\\\"cursor:pointer; color:grey\\\">\\n               <mat-icon  >delete</mat-icon>\\n            </span>\\n         </mat-card-actions>\\n      </mat-card>\\n   </div>\\n   <div *ngIf=\\\"employeeTrainings.length===0\\\" class=\\\"tos-content-color\\\">No Trainings scheduled </div>\\n</div>\\n</mat-expansion-panel>\\n<mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\" [expanded]=\\\"true\\\">\\n<mat-expansion-panel-header>\\n   <mat-panel-title>\\n      <h3>Feedbacks</h3>\\n   </mat-panel-title>\\n   <mat-panel-description>\\n      <!--Currently I am {{panelOpenState ? 'open' : 'closed'}}-->\\n   </mat-panel-description>\\n</mat-expansion-panel-header>\\n<div class=\\\" tos-button-right\\\">\\n   <span  (click)=\\\"openDialog('feedbacks')\\\" class=\\\"tos-add-button\\\">+</span>\\n</div>\\n<div class=\\\"container\\\" fxlayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1%\\\" fxLayoutAlign=\\\"flex-start\\\">\\n   <div fxFlex=\\\"30%\\\" *ngFor = \\\"let feedback of employeeFeedbacks\\\">\\n      <mat-card class=\\\"example-card\\\" >\\n         <mat-card-header>\\n            <mat-card-title>\\n               <h3><span class=\\\"tos-cust-heading\\\">{{feedback.feedback}}</span></h3>\\n            </mat-card-title>\\n         </mat-card-header>\\n         <mat-card-content>\\n            Recieved From: {{feedback.receivedFrom}} <br>Action Taken: {{feedback.actionsTaken}}<br>\\n         </mat-card-content>\\n         <mat-card-actions>\\n            <span (click)=\\\"openUpdateDialog('feedbacks',feedback.id)\\\" style=\\\"cursor:pointer;color:grey\\\">\\n               <mat-icon  >create</mat-icon>\\n            </span>\\n            &emsp;\\n            <span (click)=\\\"delelteEntity('feedbacks', feedback.id, employeeFeedbacks)\\\" style=\\\"cursor:pointer; color:grey\\\">\\n               <mat-icon  >delete</mat-icon>\\n            </span>\\n         </mat-card-actions>\\n      </mat-card>\\n   </div>\\n   <div *ngIf=\\\"employeeFeedbacks.length===0\\\"  class=\\\"tos-content-color\\\">No Feedbacks</div>\\n</div>\\n</mat-expansion-panel>\\n<mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\" [expanded]=\\\"true\\\">\\n<mat-expansion-panel-header>\\n   <mat-panel-title>\\n      <h3>Improvement Areas</h3>\\n   </mat-panel-title>\\n   <mat-panel-description>\\n      <!--Currently I am {{panelOpenState ? 'open' : 'closed'}}-->\\n   </mat-panel-description>\\n</mat-expansion-panel-header>\\n<div class=\\\" tos-button-right\\\">\\n   <span  (click)=\\\"openDialog('improvementareas')\\\" class=\\\"tos-add-button\\\">+</span>\\n</div>\\n<div class=\\\"container\\\" fxlayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1%\\\" fxLayoutAlign=\\\"flex-start\\\">\\n   <div fxFlex=\\\"30%\\\" *ngFor = \\\"let improvementArea of employeeImprovementAreas\\\">\\n      <mat-card class=\\\"example-card\\\" >\\n         <mat-card-header>\\n            <mat-card-title>\\n               <h3><span class=\\\"tos-cust-heading\\\">{{improvementArea.areasOfImprovement}}</span></h3>\\n            </mat-card-title>\\n         </mat-card-header>\\n         <mat-card-content>\\n            Plan : {{improvementArea.improvementPlan}} <br>\\n            Proposed Date: {{improvementArea.proposedDate | date : 'd-M-yy'}}<br>\\n         </mat-card-content>\\n         <mat-card-actions>\\n            <span (click)=\\\"openUpdateDialog('improvementareas', improvementArea.id)\\\" style=\\\"cursor:pointer;color:grey\\\">\\n               <mat-icon  >create</mat-icon>\\n            </span>\\n            &emsp;\\n            <span (click)=\\\"delelteEntity('improvementareas', improvementArea.id, employeeImprovementAreas )\\\" style=\\\"cursor:pointer; color:grey\\\">\\n               <mat-icon  >delete</mat-icon>\\n            </span>\\n         </mat-card-actions>\\n      </mat-card>\\n   </div>\\n   <div *ngIf=\\\"employeeImprovementAreas.length===0\\\"  class=\\\"tos-content-color\\\">No improvement Areas Defined </div>\\n</div>\\n</mat-expansion-panel>\\n<mat-expansion-panel (opened)=\\\"panelOpenState = true\\\" (closed)=\\\"panelOpenState = false\\\" [expanded]=\\\"true\\\">\\n<mat-expansion-panel-header>\\n   <mat-panel-title>\\n      <h3>Teams</h3>\\n   </mat-panel-title>\\n   <mat-panel-description>\\n      <!--Currently I am {{panelOpenState ? 'open' : 'closed'}}-->\\n   </mat-panel-description>\\n</mat-expansion-panel-header>\\n<div class=\\\"container\\\" fxlayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"1%\\\" fxLayoutAlign=\\\"flex-start\\\">\\n   <div fxFlex=\\\"30%\\\" *ngFor = \\\"let team of teams\\\">\\n      <mat-card class=\\\"example-card\\\" >\\n         <mat-card-header>\\n            <mat-card-title>\\n              <h3 class=\\\"shake-hover-style\\\"><span (click)=\\\"navigateViewTeam(team.id)\\\" class=\\\"tos-cust-heading\\\">{{team.name}} </span></h3>\\n            </mat-card-title>\\n         </mat-card-header>\\n         <mat-card-content><span (click)=\\\"navigateViewTeam(team.id)\\\"> {{team.specialization}} <br></span>\\n         </mat-card-content>\\n         <mat-card-actions>\\n         </mat-card-actions>\\n      </mat-card>\\n   </div>\\n   <div *ngIf=\\\"teams.length===0\\\"  class=\\\"tos-content-color\\\">No Teams Present </div>\\n</div>\\n</mat-expansion-panel>\\n</mat-accordion>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employee/employee-view.html\n// module id = ./src/app/employee/employee-view.html\n// module chunks = main","export class Employee {\r\n  id = '';\r\n  name = '';\r\n  joiningDate = '';\r\n  yearsOfExperience = '';\r\n  responsibilities = '';\r\n  createdAt = '';\r\n  skills = [];\r\n  certifications = [];\r\n  trainings = [];\r\n  feedbacks = [];\r\n  improvementAreas = [];\r\n  teamMembers = [];\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employee/employee.ts","import { Component, Inject, OnInit} from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'feedback-dialog',\n  templateUrl: './feedback-dialog.html'\n})\nexport class FeedbackDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<FeedbackDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employee/feedback/feedback-dialog.component.ts","module.exports = \"<div *ngIf=\\\"  data.employeeFeedback!==undefined \\\" >\\n   <h2 *ngIf=\\\"data.employeeFeedback.id === ''\\\" mat-dialog-title>Add Feedback</h2>\\n   <h2   *ngIf=\\\"data.employeeFeedback.id !== ''\\\" mat-dialog-title>Update Feedback</h2>\\n   <mat-dialog-content>\\n      <form id=\\\"formNewFeedbackUpdate\\\" name=\\\"formNewFeedbackUpdate\\\"  #feedbackDataUpdate=\\\"ngForm\\\">\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Feedback\\\" name=\\\"feedback\\\" [value]=\\\"data.employeeFeedback.feedback\\\" [(ngModel)]=\\\"data.employeeFeedback.feedback\\\" ngModel><br>\\n         </mat-form-field>\\n         <br>\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Received From\\\" name=\\\"receivedFrom\\\" [value]=\\\"data.employeeFeedback.receivedFrom\\\" [(ngModel)]=\\\"data.employeeFeedback.receivedFrom\\\" ngModel>\\n         </mat-form-field>\\n         <br>\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Actions Taken\\\" name=\\\"actionsTaken\\\" [value]=\\\"data.employeeFeedback.actionsTaken\\\" [(ngModel)]=\\\"data.employeeFeedback.actionsTaken\\\" ngModel><br>\\n         </mat-form-field>\\n         <br>\\n      </form>\\n   </mat-dialog-content>\\n   <mat-dialog-actions>\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.employeeFeedback *ngIf=\\\"data.employeeFeedback.id !== ''\\\">Update</button>\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.employeeFeedback  *ngIf=\\\"data.employeeFeedback.id === ''\\\">Add</button>\\n      <button mat-button mat-dialog-close=\\\"dialogDismissed\\\" disableRipple=\\\"true\\\" class=\\\"tos-button\\\">Cancel</button>\\n   </mat-dialog-actions>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employee/feedback/feedback-dialog.html\n// module id = ./src/app/employee/feedback/feedback-dialog.html\n// module chunks = main","export class Feedback {\r\n  id = '';\r\n  feedback = '';\r\n  employeeId = '';\r\n  receivedFrom = '';\r\n  actionsTaken = '';\r\n  createdAt = '';\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employee/feedback/feedback.ts","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'improvementarea-dialog',\n  templateUrl: './improvementarea-dialog.html'\n})\nexport class ImprovementAreaDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<ImprovementAreaDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employee/improvementarea/improvementarea-dialog.component.ts","module.exports = \"<div *ngIf=\\\"  data.employeeImprovementArea!==undefined\\\" >\\n   <h2 *ngIf=\\\"data.employeeImprovementArea.id === ''\\\" mat-dialog-title>Add ImprovementArea</h2>\\n   <h2   *ngIf=\\\"data.employeeImprovementArea.id !== ''\\\" mat-dialog-title>Update Improvements</h2>\\n   <mat-dialog-content>\\n      <form id=\\\"formNewImprovementAreaUpdate\\\" name=\\\"formNewImprovementAreaUpdate\\\"  #improvementAreaDataUpdate=\\\"ngForm\\\">\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Areas of Improvement\\\" name=\\\"areasOfImprovement\\\" [value]=\\\"data.employeeImprovementArea.areasOfImprovement\\\" [(ngModel)]=\\\"data.employeeImprovementArea.areasOfImprovement\\\" ngModel><br>\\n         </mat-form-field>\\n         <br>\\n         <mat-form-field >\\n            <input matInput placeholder=\\\"Improvement Plan\\\" name=\\\"improvementPlan\\\" [value]=\\\"data.employeeImprovementArea.improvementPlan\\\" [(ngModel)]=\\\"data.employeeImprovementArea.improvementPlan\\\" ngModel>\\n         </mat-form-field>\\n         <br>\\n         <mat-form-field>\\n            <input matInput name=\\\"proposedDate\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Proposed Date\\\"\\n            [value]=\\\"data.employeeImprovementArea.proposedDate\\\"\\n            [(ngModel)]=\\\"data.employeeImprovementArea.proposedDate\\\" ngModel>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker  #picker></mat-datepicker>\\n         </mat-form-field>\\n      </form>\\n   </mat-dialog-content>\\n   <mat-dialog-actions>\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.employeeImprovementArea *ngIf=\\\"data.employeeImprovementArea.id !== ''\\\">Update</button>\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.employeeImprovementArea  *ngIf=\\\"data.employeeImprovementArea.id === ''\\\">Add</button>\\n      <button mat-button mat-dialog-close=\\\"dialogDismissed\\\" disableRipple=\\\"true\\\" class=\\\"tos-button\\\">Cancel</button>\\n   </mat-dialog-actions>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employee/improvementarea/improvementarea-dialog.html\n// module id = ./src/app/employee/improvementarea/improvementarea-dialog.html\n// module chunks = main","export class ImprovementArea {\r\n  id = '';\r\n  areasOfImprovement = '';\r\n  employeeId = '';\r\n  improvementPlan = '';\r\n  proposedDate = '';\r\n  createdAt = '';\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employee/improvementarea/improvementarea.ts","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'skill-dialog',\n  templateUrl: './skill-dialog.html'\n})\nexport class SkillDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<SkillDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employee/skill/skill-dialog.component.ts","module.exports = \"<div *ngIf=\\\"  data.employeeSkill!==undefined \\\" >\\r\\n   <h2 *ngIf=\\\"data.employeeSkill.id === ''\\\" mat-dialog-title>Add Skill</h2>\\r\\n   <h2   *ngIf=\\\"data.employeeSkill.id !== ''\\\" mat-dialog-title>Update Skill</h2>\\r\\n   <mat-dialog-content>\\r\\n      <form id=\\\"formNewSkillUpdate\\\" name=\\\"formNewSkillUpdate\\\"  #skillDataUpdate=\\\"ngForm\\\">\\r\\n         <mat-form-field >\\r\\n            <input matInput placeholder=\\\"Name\\\" name=\\\"name\\\" [value]=\\\"data.employeeSkill.name\\\" [(ngModel)]=\\\"data.employeeSkill.name\\\" ngModel><br>\\r\\n         </mat-form-field><br>\\r\\n         <mat-form-field >\\r\\n            <input matInput placeholder=\\\"Duration( in months)\\\" name=\\\"duration\\\" [value]=\\\"data.employeeSkill.duration\\\" [(ngModel)]=\\\"data.employeeSkill.duration\\\" ngModel>\\r\\n         </mat-form-field><br>\\r\\n          <mat-form-field>\\r\\n            <mat-select [(value)]=\\\"selected\\\" [(ngModel)]=\\\"data.employeeSkill.rating\\\" placeholder=\\\"Rating\\\" name=\\\"rating\\\">\\r\\n              <mat-option *ngFor=\\\"let rating of data.skillRatings\\\" [value]=\\\"rating\\\">\\r\\n                {{ rating }}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field><br>\\r\\n         <mat-form-field >\\r\\n            <input matInput placeholder=\\\"Last Worked on\\\" name=\\\"lastUsed\\\" [value]=\\\"data.employeeSkill.lastUsed\\\" [(ngModel)]=\\\"data.employeeSkill.lastUsed\\\" ngModel>\\r\\n         </mat-form-field>\\r\\n      </form>\\r\\n   </mat-dialog-content>\\r\\n   <mat-dialog-actions>\\r\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.employeeSkill *ngIf=\\\"data.employeeSkill.id !== ''\\\">Update</button>\\r\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.employeeSkill  *ngIf=\\\"data.employeeSkill.id === ''\\\">Add</button>\\r\\n      <button mat-button mat-dialog-close=\\\"dialogDismissed\\\" disableRipple=\\\"true\\\" class=\\\"tos-button\\\">Cancel</button>\\r\\n   </mat-dialog-actions>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employee/skill/skill-dialog.html\n// module id = ./src/app/employee/skill/skill-dialog.html\n// module chunks = main","export class Skill {\r\n  id = '';\r\n  name = '';\r\n  employeeId = '';\r\n  duration = '';\r\n  rating = '';\r\n  lastUsed = '';\r\n  createdAt = '';\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employee/skill/skill.ts","import { Component, Inject, OnInit} from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'training-dialog',\n  templateUrl: './training-dialog.html'\n})\nexport class TrainingDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<TrainingDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employee/training/training-dialog.component.ts","module.exports = \"<div *ngIf=\\\"  data.employeeTraining!==undefined\\\" >\\r\\n   <h2 *ngIf=\\\"data.employeeTraining.id === ''\\\" mat-dialog-title>Add Training</h2>\\r\\n   <h2   *ngIf=\\\"data.employeeTraining.id !== ''\\\" mat-dialog-title>Update Training</h2>\\r\\n   <mat-dialog-content>\\r\\n      <form id=\\\"formNewTrainingUpdate\\\" name=\\\"formNewTrainingUpdate\\\"  #trainingDataUpdate=\\\"ngForm\\\">\\r\\n         <mat-form-field >\\r\\n            <input matInput placeholder=\\\"Name\\\" name=\\\"name\\\" [value]=\\\"data.employeeTraining.name\\\" [(ngModel)]=\\\"data.employeeTraining.name\\\" ngModel><br>\\r\\n         </mat-form-field>\\r\\n         <br>\\r\\n         <mat-form-field>\\r\\n            <mat-select [(value)]=\\\"selected\\\" [(ngModel)]=\\\"data.employeeTraining.mode\\\" placeholder=\\\"Mode\\\" name=\\\"mode\\\" >\\r\\n            <mat-option *ngFor=\\\"let mode of data.trainingModes\\\" [value]=\\\"mode\\\">\\r\\n            {{ mode }}\\r\\n            </mat-option>\\r\\n            </mat-select>\\r\\n         </mat-form-field>\\r\\n         <br>\\r\\n         <mat-form-field>\\r\\n            <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Proposed Date\\\" name=\\\"proposedDate\\\"\\r\\n            [value]=\\\"data.employeeTraining.proposedDate\\\"\\r\\n            [(ngModel)]=\\\"data.employeeTraining.proposedDate\\\" ngModel>\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker  #picker></mat-datepicker>\\r\\n         </mat-form-field>\\r\\n         <br>\\r\\n         <mat-form-field >\\r\\n            <input matInput placeholder=\\\"Reason\\\" name=\\\"reason\\\" [value]=\\\"data.employeeTraining.reason\\\" [(ngModel)]=\\\"data.employeeTraining.reason\\\" ngModel>\\r\\n         </mat-form-field>\\r\\n      </form>\\r\\n   </mat-dialog-content>\\r\\n   <mat-dialog-actions>\\r\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.employeeTraining *ngIf=\\\"data.employeeTraining.id !== ''\\\">Update</button>\\r\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" [mat-dialog-close]=data.employeeTraining  *ngIf=\\\"data.employeeTraining.id === ''\\\">Add</button>\\r\\n      <button mat-button mat-dialog-close=\\\"dialogDismissed\\\" disableRipple=\\\"true\\\" class=\\\"tos-button\\\">Cancel</button>\\r\\n   </mat-dialog-actions>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employee/training/training-dialog.html\n// module id = ./src/app/employee/training/training-dialog.html\n// module chunks = main","export class Training {\r\n  id = '';\r\n  name = '';\r\n  employeeId = '';\r\n  mode = '';\r\n  proposedDate = '';\r\n  reason = '';\r\n  createdAt = '';\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employee/training/training.ts","import { Component } from '@angular/core';\n\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'footer',\n  templateUrl: './footer.html'\n})\nexport class FooterComponent {\n  items: any[];\n  title = 'Team Operations System';\n\n  constructor(private router: Router, private route: ActivatedRoute) { }\n\n  navigateHome() {\n    this.router.navigate(['/']);\n  }\n\n  navigateCustomers() {\n    this.router.navigate(['/customer-home'], { skipLocationChange: false });\n  }\n\n  navigateEmployeeHome() {\n    this.router.navigate(['/employee-home'], { skipLocationChange: false });\n  }\n\n  navigateAbout() {\n    this.router.navigate(['/about'], { skipLocationChange: false });\n  }\n\n  navigateProfile() {\n    this.router.navigate(['/profile'], { skipLocationChange: false });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/footer/footer.component.ts","module.exports = \"   <div fxFlex=\\\"15%\\\" fxHide.lt-md=\\\"true\\\"></div>\\n   <div fxFlex=\\\"100%\\\" class=\\\"tos-footer\\\" >\\n      <p style=\\\"width: 41%\\\">© Copyright 2018. <a href=\\\"https://www.comakeit.com/\\\" target=\\\"_blank\\\">coMakeIT </a> | All Rights Reserved.</p>\\n      <p style=\\\"width: 25%\\\"></p>\\n      <p style=\\\"width: 34%\\\">Social Networks:\\n        <span style=\\\"margin-left: 5px;\\\">\\n          <a href=\\\"https://www.facebook.com/comakeit\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-facebook social-icons \\\" aria-hidden=\\\"true\\\"></i></a>\\n          <a href=\\\"https://www.linkedin.com/company/comakeit\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-linkedin social-icons \\\" aria-hidden=\\\"true\\\"></i></a>\\n          <a href=\\\"https://twitter.com/comakeit\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-twitter social-icons \\\" aria-hidden=\\\"true\\\"></i></a>\\n        </span></p>\\n   </div>\\n   <div fxFlex=\\\"15%\\\" fxHide.lt-md=\\\"true\\\"></div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/footer/footer.html\n// module id = ./src/app/footer/footer.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\nimport { Router } from '@angular/router';\nimport { LocalStorageService } from '../services/localStorage.service';\n\n@Component({\n  selector: 'home',\n  templateUrl: './home.html',\n  animations: [\n    trigger('fade', [\n      state('void', style({ opacity: 0 })),\n      transition(':enter, :leave', [\n        animate('200ms ease-in')\n      ])\n    ])\n  ]\n})\nexport class HomeComponent {\n  expression: any;\n  constructor(private router: Router, private localStorageService: LocalStorageService) { }\n\n  ngOnInit() {\n    if (this.localStorageService.getValueFromLocalStorage() == null)\n      this.router.navigate(['view/login']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","module.exports = \"<h3 class=\\\"tos-component-heading\\\">Welcome !!!</h3>\\n<br>\\nTOS is an initiative taken in the direction of employee, client and management relationship\\non a same platform. The motivation is to help management, employees and clients to keep track of\\noperational activities in a much smoother and organised way.\\n<br><br>\\n<span style=\\\"color: #505050;\\\">For Managers:</span>\\n<ul>\\n  <li>Can keep track of Clients.</li>\\n  <li>Can keep track of employees.</li>\\n</ul>\\n<span style=\\\"color: #505050;\\\">For Clients: </span>\\n<br>\\n<ul>\\n  <li>Can keep track of their teams, trainings, goals.</li>\\n</ul>\\n<span style=\\\"color: #505050;\\\">For Employees: </span>\\n<br>\\n<ul>\\n  <li>Can keep track of their teams, trainings, goals.</li>\\n</ul>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.html\n// module id = ./src/app/home/home.html\n// module chunks = main","import { Component } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { UtilityService } from '../services/utility.service';\nimport { AuthService } from '../services/auth.service';\nimport { LocalStorageService } from '../services/localStorage.service';\nimport { DataService } from '../services/data.service';\nimport { UrlService } from '../services/url.service';\n\nimport { Token } from '../token';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.html'\n})\nexport class LoginComponent {\n  hide: boolean = true;\n\n  user = {\n    username: '',\n    password: '',\n    role: ''\n  };\n\n  userRoles: Array<String>;\n  wrongCreds: string = undefined;\n\n  constructor(private router: Router, private authService: AuthService,\n    private localStorageService: LocalStorageService, private utilityService: UtilityService,\n    private dataService: DataService, private urlService: UrlService) { }\n\n  ngOnInit() {\n    this.userRoles = ['admin', 'manager', 'employee'];\n  }\n\n  login(usercreds) {\n    this.authService.login(usercreds)\n      .then((data) => {\n        this.localStorageService.setAuthorizationData(data);\n        this.utilityService.addTokenSubject(data.access_token);\n        this.router.navigate(['/home']);\n      },\n      (err) => {\n        this.wrongCreds = \"Invalid Credentials\"\n      }\n      );\n  }\n\n  onKeydown(event) {\n    if (event.key === \"Enter\") {\n      this.login(this.user);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","module.exports = \"<h2 class=\\\"tos-login-heading\\\">Team Operations System</h2>\\n<mat-card flex=\\\"flex\\\">\\n   <h3> Login </h3>\\n   <mat-card-content>\\n      <br>\\n      <mat-form-field>\\n         <input matInput placeholder=\\\"Username\\\"  [(ngModel)]=\\\"user.username\\\" required >\\n      </mat-form-field>\\n      <br>\\n      <mat-form-field>\\n         <input (keydown)=\\\"onKeydown($event)\\\" matInput placeholder=\\\"Password\\\" [type]=\\\"hide ? 'password' : 'text'\\\"  [(ngModel)]=\\\"user.password\\\" required>\\n         <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n      </mat-form-field>\\n      <br><br>\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" (click)=\\\"login(user)\\\">Login</button>\\n      <br><br>\\n      <a *ngIf = \\\"wrongCreds !== undefined\\\" style=\\\"padding-left: 16px; color: red; font-size: 12px\\\"> {{wrongCreds}} </a>\\n      <p class=\\\"font-small grey-text d-flex justify-content-end\\\">Not a member?\\n         <a routerLink=\\\"../../view/register\\\" href=\\\"#\\\" class=\\\"blue-text ml-1\\\"> Sign Up</a>\\n      </p>\\n   </mat-card-content>\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.html\n// module id = ./src/app/login/login.html\n// module chunks = main","export class BreadCrumb {\r\n  depth = '';\r\n  label = '';\r\n  url = '';\r\n  entityId = -1;\r\n  state = '';  /* Crumb state could be [entity, entities, single, none] */\r\n  message = '';\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/menu/breadCrumb.ts","import { Component, Input } from '@angular/core';\nimport { UtilityService } from '../services/utility.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { BreadCrumb } from '../menu/breadCrumb';\n\n@Component({\n  selector: 'breadcrumb',\n  templateUrl: './breadcrumb.html'\n})\nexport class BreadcrumbComponent {\n  crumbs = Array<BreadCrumb>();\n\n  constructor(private utilityService: UtilityService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.utilityService.currentBreadCrumb.subscribe(breadCrumb => {\n      if (breadCrumb.state === 'entity') {\n        this.crumbs.push(breadCrumb)\n      }\n      else {\n        this.crumbs = [];\n        if (breadCrumb.state !== 'none') {\n          this.crumbs.push(breadCrumb)\n        }\n      }\n    })\n  }\n\n  navigate(crumb) {\n    if (crumb.state === 'entity') {\n      let tempCrumbs = [];\n      this.crumbs.forEach(c => {\n        if (c.depth <= crumb.depth)\n          tempCrumbs.push(c)\n      })\n      this.crumbs = [];\n      this.crumbs = tempCrumbs;\n      this.router.navigate([crumb.url, crumb.entityId], { skipLocationChange: false });\n    }\n    else if (crumb.state === 'entities') {\n      this.crumbs = [];\n      this.crumbs.push(crumb)\n      this.router.navigate([crumb.url], { skipLocationChange: false });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/menu/breadcrumb.component.ts","module.exports = \"<div>\\r\\n  <div class=\\\"tos-breads\\\" *ngIf=\\\"crumbs.length > 0 && crumbs[0].entityId != -1\\\">\\r\\n     <a *ngFor=\\\"let crumb of crumbs\\\" class=\\\"tos-crumbs-a\\\">\\r\\n     <span (click)=\\\"navigate(crumb)\\\"  >\\r\\n        <span class=\\\"tos-breadcrumb-content\\\"> {{crumb.label}}\\r\\n            <a class=\\\"tos-breadcrumb-content\\\" *ngIf=\\\"crumb.message !== ''\\\"> {{crumb.message}}  </a>\\r\\n        </span>\\r\\n        <a  class=\\\"tos-arrow\\\" *ngIf=\\\"crumbs.length > 1\\\"> &#9658; </a>\\r\\n     </span>\\r\\n     </a>\\r\\n  </div>\\r\\n</div>\\r\\n<!--  &#9658; -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/menu/breadcrumb.html\n// module id = ./src/app/menu/breadcrumb.html\n// module chunks = main","import { Component } from '@angular/core';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UtilityService } from '../services/utility.service';\nimport { BreadCrumb } from '../menu/breadCrumb';\n\n@Component({\n  selector: 'menu',\n  templateUrl: './menu.html'\n})\nexport class MenuComponent {\n  items: any[];\n  title = 'Team Operations System';\n  titleXS = 'Team Operations';\n  bread: BreadCrumb;\n\n  constructor(private utilityService: UtilityService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n\n    this.utilityService.currentBreadCrumb.subscribe(bread => this.bread = bread);\n    /*\n      this.items = [\n          {\n              label: 'Home',\n              icon: 'fa-home',\n              command: (onclick)=> {this.navigateHome()}\n          }\n      ];\n      */\n  }\n\n  navigateHome() {\n    this.utilityService.addBreadCrumb(0, 'None', '/', -1, 'none', '');\n    this.router.navigate(['/']);\n  }\n\n  navigateCustomers() {\n    this.utilityService.addBreadCrumb(1, 'Customers', 'view/customers', 0, 'entities', '');\n    this.router.navigate(['view/customers'], { skipLocationChange: false });\n  }\n\n  navigateEmployeeHome() {\n    this.utilityService.addBreadCrumb(1, 'Employees', 'view/employees', 0, 'entities', '');\n    this.router.navigate(['view/employees'], { skipLocationChange: false });\n  }\n\n  navigateAbout() {\n    this.utilityService.addBreadCrumb(1, 'About', 'view/about', 0, 'single', '');\n    this.router.navigate(['view/about'], { skipLocationChange: false });\n  }\n\n  navigateProfile() {\n    this.utilityService.addBreadCrumb(1, 'Profile', 'view/profile', 0, 'single', '');\n    this.router.navigate(['view/profile'], { skipLocationChange: false });\n  }\n\n  logout() {\n    localStorage.clear();\n    this.utilityService.addTokenSubject('');\n    this.router.navigate(['view/login']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/menu/menu.component.ts","module.exports = \"<mat-toolbar >\\n  <a href=\\\"./index.html\\\" class=\\\"tos-title-style\\\">\\n   <h2 class=\\\"title-xs\\\">{{titleXS}}</h2>\\n   <h2 class=\\\"title-gt-xs\\\">{{title}}</h2>\\n</a>\\n<span class=\\\"example-spacer\\\"></span>\\n<div fxShow=\\\"true\\\" fxHide.lt-md=\\\"true\\\" class=\\\"tos-menu-buttons\\\">\\n  <a (click)=\\\"navigateHome()\\\">Home</a>\\n <a (click)=\\\"navigateCustomers()\\\">Customer</a>\\n  <a (click)=\\\"navigateEmployeeHome()\\\">Employee</a>\\n  <a (click)=\\\"navigateAbout()\\\">About</a>\\n  <a (click)=\\\"logout()\\\">Logout</a>\\n <!--  <button mat-button (click)=\\\"navigateHome()\\\"  disableRipple=\\\"true\\\">Home</button>\\n   <button mat-button (click)=\\\"navigateEmployeeHome()\\\">Employee</button>\\n   <button mat-button (click)=\\\"navigateCustomers()\\\">Customer</button>\\n  <button mat-button (click)=\\\"navigateProfile()\\\">DashBoard</button>\\n   <button mat-button (click)=\\\"navigateAbout()\\\">About</button>\\n   <button mat-button (click)=\\\"logout()\\\">Logout</button> -->\\n</div>\\n<div class=\\\"tos-xs-menu\\\" fxShow=\\\"false\\\" fxShow.lt-md=\\\"true\\\" fxLayout=\\\"column\\\">\\n   <mat-menu #appMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n <!--    <button mat-button (click)=\\\"navigateHome()\\\">Home</button>\\n   <button mat-button (click)=\\\"navigateEmployeeHome()\\\">Employee</button>\\n   <button mat-button (click)=\\\"navigateCustomers()\\\">Customer</button>\\n    <button mat-button (click)=\\\"navigateProfile()\\\">DashBoard</button>\\n   <button mat-button (click)=\\\"navigateAbout()\\\">About</button>\\n   <button mat-button (click)=\\\"logout()\\\">Logout</button>-->\\n   <a (click)=\\\"navigateHome()\\\">Home</a>\\n   <a (click)=\\\"navigateCustomers()\\\">Customer</a>\\n   <a (click)=\\\"navigateEmployeeHome()\\\">Employee</a>\\n   <a (click)=\\\"navigateAbout()\\\">About</a>\\n   <a (click)=\\\"logout()\\\">Logout</a>\\n   </mat-menu>\\n\\n   <i class=\\\"fa fa-navicon tos-menu-icon\\\" aria-hidden=\\\"true\\\" [matMenuTriggerFor]=\\\"appMenu\\\"></i>\\n\\n\\n</div>\\n</mat-toolbar>\\n\\n<breadcrumb> </breadcrumb>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/menu/menu.html\n// module id = ./src/app/menu/menu.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'profile',\n  templateUrl: './profile.html'\n})\nexport class ProfileComponent {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/profile/profile.component.ts","module.exports = \"<h3>Profile Operations</h3>\\n<br>\\n<br>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/profile/profile.html\n// module id = ./src/app/profile/profile.html\n// module chunks = main","import { Component } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { UtilityService } from '../services/utility.service';\nimport { AuthService } from '../services/auth.service';\nimport { LocalStorageService } from '../services/localStorage.service';\nimport { DataService } from '../services/data.service';\nimport { UrlService } from '../services/url.service';\n\nimport { Token } from '../token';\n\n@Component({\n  selector: 'register',\n  templateUrl: './register.html'\n})\nexport class RegisterComponent {\n  hide: boolean = true;\n\n  newUser = {\n    username: '',\n    password: ''\n  };\n\n  userRoles: Array<String>;\n  wrongCreds: string = undefined;\n\n  constructor(private router: Router, private authService: AuthService,\n    private localStorageService: LocalStorageService, private utilityService: UtilityService,\n    private dataService: DataService, private urlService: UrlService) { }\n\n  ngOnInit() {\n    this.userRoles = ['admin', 'manager', 'employee'];\n  }\n\n  register(usercreds) {\n    this.dataService.postUserEntity('users', usercreds)\n      .then((resCustomerData: any) => {\n        location.href = (location.origin === 'http://localhost:4200') ? location.origin : this.urlService.getAppBaseUrl();\n      },\n      (err) => console.log(\"users could not be updated :\" + err)\n      );\n  }\n\n  onKeydown(event) {\n    if (event.key === \"Enter\") {\n      this.register(this.newUser);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/register/register.component.ts","module.exports = \"<h2 class=\\\"tos-login-heading\\\">Team Operations System</h2>\\n<mat-card flex=\\\"flex\\\">\\n   <h3> Register </h3>\\n   <mat-card-content>\\n      <br>\\n      <mat-form-field>\\n         <input matInput placeholder=\\\"Username\\\"  [(ngModel)]=\\\"newUser.username\\\" required >\\n      </mat-form-field>\\n      <br>\\n      <mat-form-field>\\n         <input matInput (keydown)=\\\"onKeydown($event)\\\" placeholder=\\\"Password\\\" [type]=\\\"hide ? 'password' : 'text'\\\"  [(ngModel)]=\\\"newUser.password\\\" required>\\n         <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n      </mat-form-field>\\n      <br><br>\\n      <button mat-raised-button class=\\\"tos-primary-button\\\" (click)=\\\"register(newUser)\\\">Register</button>\\n      <br><br>\\n      <p class=\\\"font-small grey-text d-flex justify-content-end\\\">Already a member?\\n         <a routerLink=\\\"../../view/login\\\" href=\\\"#\\\" class=\\\"blue-text ml-1\\\"> Login</a>\\n      </p>\\n   </mat-card-content>\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register/register.html\n// module id = ./src/app/register/register.html\n// module chunks = main","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HttpModule, Http, Headers } from '@angular/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { Token } from '../token';\r\nimport { UrlService } from '../services/url.service';\r\n\r\nimport 'rxjs/add/observable/of';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  AccessToken: string = \"\";\r\n\r\n  constructor(private http: Http, private urlService: UrlService) {\r\n  }\r\n\r\n  login(usercreds): Promise<Token> {\r\n    // Authorization code is : Basic bXktdHJ1c3RlZC1jbGllbnQ6c2VjcmV0\r\n    let headersForTokenAPI = new Headers();\r\n    headersForTokenAPI.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    headersForTokenAPI.append(\"Authorization\", \"Basic bXktdHJ1c3RlZC1jbGllbnQ6c2VjcmV0\");\r\n\r\n    var data = \"?grant_type=password&username=\" + usercreds.username + \"&password=\" + usercreds.password;\r\n\r\n    return this.http.post(this.urlService.getTokenApiUrl() + data, null, { headers: headersForTokenAPI })\r\n      .map(res => {\r\n        this.AccessToken = res.json().access_token;\r\n        return res.json();\r\n      }).toPromise();\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { UtilityService } from './utility.service';\r\nimport { LocalStorageService } from './localStorage.service';\r\nimport { UrlService } from './url.service';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n  token: any;\r\n  baseResourceURL: string;\r\n\r\n  constructor(private httpClient: HttpClient, private localStorageService: LocalStorageService,\r\n    private utilityService: UtilityService, private urlService: UrlService) {\r\n    let headers = new HttpHeaders().set('Content-Type', 'application/json')\r\n      .set('Accept', 'application/json');\r\n\r\n      this.baseResourceURL = this.urlService.getBaseResourceUrl();\r\n  }\r\n\r\n  getToken() {\r\n    if (this.localStorageService.getValueFromLocalStorage() !== null)\r\n      return this.token = '?access_token=' + this.localStorageService.getValueFromLocalStorage().access_token;\r\n  }\r\n\r\n  getEntityData(entityName: string, id: number): Promise<any> {\r\n    return this.httpClient.get<any>(this.baseResourceURL + entityName + \"/\" + id + this.getToken()).toPromise()\r\n      .then((response: Response) => response);\r\n  }\r\n\r\n  getEntityAllData(entityName: any): Promise<any> {\r\n    return this.httpClient.get<any>(this.baseResourceURL + entityName + \"/\" + this.getToken()).toPromise()\r\n      .then((response: Response) => response);\r\n  }\r\n\r\n  getUsers(): Promise<any> {\r\n    return this.httpClient.get<any>('http://localhost:8080/tos-app/tosuser/tosadmin/users' + \"/\" + this.getToken()).toPromise()\r\n      .then((response: Response) => response);\r\n  }\r\n\r\n  postEntity(entityName: string, entity: any) {\r\n    return this.httpClient.post(this.baseResourceURL + entityName + \"/\" + this.getToken(), entity).toPromise()\r\n      .then((response: Response) => response);\r\n  }\r\n\r\n  updateEntity(entityName: string, id: number, entity: any) {\r\n    return this.httpClient.put(this.baseResourceURL + entityName + \"/\" + id + this.getToken(), entity).toPromise()\r\n      .then((response: Response) => response);\r\n  }\r\n\r\n  delelteEntity(entityName: string, id: number) {\r\n    return this.httpClient.delete(this.baseResourceURL + entityName + \"/\" + id + this.getToken()).toPromise()\r\n      .then((response: Response) => response);\r\n  }\r\n\r\n  postUserEntity(entityName: string, entity: any) {\r\n    return this.httpClient.post(this.urlService.getBaseResourceUserUrl() + entityName + \"/\", entity).toPromise()\r\n      .then((response: Response) => response);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/data.service.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HttpModule, Http, Headers } from '@angular/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { Token } from '../token';\r\n\r\nimport 'rxjs/add/observable/of';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class LocalStorageService {\r\n\r\n  public setAuthorizationData(auth: Token): void {\r\n    localStorage.setItem(\"Authorization\", JSON.stringify(auth));\r\n  }\r\n\r\n  public getValueFromLocalStorage(): Token {\r\n    let tokendate = JSON.parse(localStorage.getItem(\"Authorization\"));\r\n    return tokendate == null ? null : tokendate;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/localStorage.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { UtilityService } from './utility.service';\r\nimport { LocalStorageService } from './localStorage.service';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class UrlService {\r\n  tokenApiUrl = '/tos-app/oauth/token';\r\n  appBaseUrl = '/tos-app/index.html';\r\n  baseResourceUrl = '/tos-app/tos/';\r\n  baseResourceUserUrl = '/tos-app/tosuser/';\r\n  propertyUrl = '/properties/uri/';  // Not used for now\r\n\r\n  baseUrl: string;\r\n\r\n  constructor() {\r\n    this.baseUrl = (location.origin === 'http://localhost:4200') ? 'http://localhost:8080' : location.origin;\r\n  }\r\n\r\n  getTokenApiUrl() {\r\n    return this.baseUrl + this.tokenApiUrl;\r\n  }\r\n\r\n  getAppBaseUrl() {\r\n    return this.baseUrl + this.appBaseUrl;\r\n  }\r\n\r\n  getBaseResourceUrl() {\r\n    return this.baseUrl + this.baseResourceUrl;\r\n  }\r\n\r\n  getBaseResourceUserUrl() {\r\n    return this.baseUrl + this.baseResourceUserUrl;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/url.service.ts","import { Injectable } from '@angular/core';\r\nimport { BreadCrumb } from '../menu/breadCrumb';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\n@Injectable()\r\nexport class UtilityService {\r\n\r\n  /* BehaviorSubject logic for breadCrumb */\r\n  private breadCrumbSource = new BehaviorSubject<BreadCrumb>(new BreadCrumb());\r\n  currentBreadCrumb = this.breadCrumbSource.asObservable();\r\n\r\n  private tokenSubject = new BehaviorSubject<any>(new Object);\r\n  currenttokenSubject = this.tokenSubject.asObservable();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  addBreadCrumb(depth, label, url, entityId, state, message) {\r\n    let breadCrumb = new BreadCrumb();\r\n    breadCrumb.depth = depth;\r\n    breadCrumb.label = label;\r\n    breadCrumb.url = url;\r\n    breadCrumb.entityId = entityId;\r\n    breadCrumb.state = state;\r\n    breadCrumb.message = message;\r\n    this.changeBreadCrumb(breadCrumb)\r\n  }\r\n\r\n  changeBreadCrumb(breadcrumb: BreadCrumb) {\r\n    this.breadCrumbSource.next(breadcrumb)\r\n  }\r\n\r\n  addTokenSubject(token) {\r\n    this.changeTokenSubject(token)\r\n  }\r\n\r\n  changeTokenSubject(token) {\r\n    this.tokenSubject.next(token)\r\n  }\r\n\r\n  checkEntity(entity: any[]) {\r\n    if (entity.length === 0)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/utility.service.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}