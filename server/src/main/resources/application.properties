## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = jdbc:mysql://localhost:3306/tosDB?useSSL=false
spring.datasource.username = root
spring.datasource.password = password


## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

# Server HTTP port
# server.port=8080 
server.context-path=/tos-app
#spring.mvc.static-path-pattern=/resources/**

tos.appBaseUrl.url=http://localhost:8080/tos-app/index.html
tos.baseResource.url=http://localhost:8080/tos-app/tos/
tos.baseResourceUser.url=http://localhost:8080/tos-app/tosuser/
tos.tokenApi.url=http://localhost:8080/tos-app/oauth/token
tos.property.url=http://localhost:8080/tos-app/properties/uri/

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./src/main/resources/static/assets/uploads
file.employee-upload-dir=./src/main/resources/static/assets/uploads/employees
file.customer-upload-dir=./src/main/resources/static/assets/uploads/customers